<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Forms.Ribbon</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Forms.RibbonArrowDirection">
            <summary>
            Represents the directions that arrows can have
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonArrowDirection.Up">
            <summary>
            The arrow points up
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonArrowDirection.Down">
            <summary>
            The arrow points down
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonArrowDirection.Right">
            <summary>
            The arrow points right
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonArrowDirection.Left">
            <summary>
            The arrow points left
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonButtonStyle.Normal">
            <summary>
            Simple clickable button
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonButtonStyle.DropDown">
            <summary>
            Button with a right side drop down
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonButtonStyle.SplitDropDown">
            <summary>
            Button with an optional dropdown attachment on the right
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonButtonStyle.DropDownListItem">
            <summary>
            Mimics a standard drop down list item with no image
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonWindowMode">
            <summary>
            Possible modes for the ribbon to be placed on the window
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonPanelFlowDirection">
            <summary>
            Represents possible flow directions of items on the panels
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonPanelFlowDirection.Left">
            <summary>
            Layout of items flows to the left, then down
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonPanelFlowDirection.Right">
            <summary>
            Layout of items flows to the Right, then down
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonPanelFlowDirection.Bottom">
            <summary>
            Layout of items flows to the bottom, then to the right
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonElementSizeMode">
            <summary>
            Represents the size modes that a RibbonElement can be
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonElementSizeMode.DropDown">
            <summary>
            The item is being shown on a dropdown
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonElementSizeMode.Large">
            <summary>
            Maximum size the element can reach
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonElementSizeMode.Medium">
            <summary>
            A medium size for the element when not much space is available
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonElementSizeMode.Compact">
            <summary>
            The minimum size the element can be
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonElementSizeMode.Overflow">
            <summary>
            The item doesn't fit as compact, so it must be shown as a single button
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonElementSizeMode.None">
            <summary>
            No size mode specified
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButtonRenderEventArgs.Button">
            <summary>
            Gets or sets the RibbonButton related to the evennt
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDownRenderEventArgs.Graphics">
            <summary>
            Gets or sets the graphics to paint
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDownRenderEventArgs.DropDown">
            <summary>
            Gets or sets the Ribbon DropDown
            </summary>
        </member>
        <member name="T:System.Windows.Forms.IContainsRibbonComponents">
            <summary>
            Used to extract all child components from RibbonItem objects
            </summary>
        </member>
        <member name="T:System.Windows.Forms.IContainsSelectableRibbonItems">
            <summary>
            Exposes GetItems, to indicate that the type contains a collection of RibbonItems
            </summary>
        </member>
        <member name="M:System.Windows.Forms.IContainsSelectableRibbonItems.GetItems">
            <summary>
            When implemented, must return an  enumerator to acces the items inside the type
            </summary>
        </member>
        <member name="M:System.Windows.Forms.IContainsSelectableRibbonItems.GetContentBounds">
            <summary>
            When implemented, must return the bounds of the content where items are displayed
            </summary>
            <returns></returns>
        </member>
        <member name="T:System.Windows.Forms.IRibbonElement">
            <summary>
            Interface that every drawable ribbon element must implement
            </summary>
        </member>
        <member name="M:System.Windows.Forms.IRibbonElement.OnPaint(System.Object,System.Windows.Forms.RibbonElementPaintEventArgs)">
            <summary>
            Called on every element when its time to draw itself
            </summary>
            <param name="g">Device to draw</param>
            <param name="sender">Object that is invoking the paint element</param>
            <param name="e">Paint event data</param>
        </member>
        <member name="M:System.Windows.Forms.IRibbonElement.MeasureSize(System.Object,System.Windows.Forms.RibbonElementMeasureSizeEventArgs)">
            <summary>
            Gets the size in pixels needed for the element in the specified mode
            </summary>
            <param name="sender">Object that sends the measure message</param>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.IRibbonElement.SetBounds(System.Drawing.Rectangle)">
            <summary>
            Called to make the element aware of its actual bounds on the control
            </summary>
        </member>
        <member name="P:System.Windows.Forms.IRibbonElement.Bounds">
            <summary>
            Gets the bounds of the item
            </summary>
        </member>
        <member name="P:System.Windows.Forms.IRibbonElement.Owner">
            <summary>
            Gets the Ribbon owner of this item.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.IRibbonToolTip.ToolTip">
            <summary>
            Gets or Sets the ToolTip Text
            </summary>
        </member>
        <member name="P:System.Windows.Forms.IRibbonToolTip.ToolTipTitle">
            <summary>
            Gets or Sets the ToolTip Title
            </summary>
        </member>
        <member name="P:System.Windows.Forms.IRibbonToolTip.ToolTipImage">
            <summary>
            Gets or Sets the ToolTip Image
            </summary>
        </member>
        <member name="P:System.Windows.Forms.IRibbonToolTip.ToolTipIcon">
            <summary>
            Gets or Sets the stock ToolTip Icon
            </summary>
        </member>
        <member name="E:System.Windows.Forms.IRibbonToolTip.ToolTipPopUp">
            <summary>
            Occurs before a ToolTip is initially displayed.
            <remarks>Use this event to change the ToolTip or Cancel it at all.</remarks>
            </summary>
        </member>
        <member name="T:System.Windows.Forms.IScrollableRibbonItem">
            <summary>
            Implemented by Ribbon items that has scrollable content
            </summary>
        </member>
        <member name="M:System.Windows.Forms.IScrollableRibbonItem.ScrollUp">
            <summary>
            Scrolls the content up
            </summary>
        </member>
        <member name="M:System.Windows.Forms.IScrollableRibbonItem.ScrollDown">
            <summary>
            Scrolls the content down
            </summary>
        </member>
        <member name="P:System.Windows.Forms.IScrollableRibbonItem.ContentBounds">
            <summary>
            Gets the bounds of the content (without scrolling controls)
            </summary>
        </member>
        <member name="M:System.Windows.Forms.ProToolstripRenderer.RoundRectangle(System.Drawing.Rectangle,System.Int32,System.Windows.Forms.ProToolstripRenderer.Corners)">
            <summary>
            Creates a rectangle with the specified corners rounded
            </summary>
            <param name="r"></param>
            <param name="radius"></param>
            <param name="corners"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.ProToolstripRenderer.ToolStripItemCorners(System.Windows.Forms.ToolStripItem)">
            <summary>
            Gets the corners to round on the specified button
            </summary>
            <param name="r"></param>
            <param name="button"></param>
            <returns></returns>
        </member>
        <member name="T:System.Windows.Forms.Ribbon">
            <summary>
            Provides a Ribbon toolbar
            </summary>
        </member>
        <member name="E:System.Windows.Forms.Ribbon.OrbClicked">
            <summary>
            Occours when the Orb is clicked
            </summary>
        </member>
        <member name="E:System.Windows.Forms.Ribbon.OrbDoubleClick">
            <summary>
            Occours when the Orb is double-clicked
            </summary>
        </member>
        <member name="E:System.Windows.Forms.Ribbon.ActiveTabChanged">
            <summary>
            Occours when the <see cref="P:System.Windows.Forms.Ribbon.ActiveTab"/> property value has changed
            </summary>
        </member>
        <member name="E:System.Windows.Forms.Ribbon.ActualBorderModeChanged">
            <summary>
            Occours when the <see cref="P:System.Windows.Forms.Ribbon.ActualBorderMode"/> property has changed
            </summary>
        </member>
        <member name="E:System.Windows.Forms.Ribbon.CaptionButtonsVisibleChanged">
            <summary>
            Occours when the <see cref="P:System.Windows.Forms.Ribbon.CaptionButtonsVisible"/> property value has changed
            </summary>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.#ctor">
            <summary>
            Creates a new Ribbon control
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.Expanded">
            <summary>
            Gets or sets the tabs expanded state when in minimize mode
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.MinimizedHeight">
            <summary>
            Gets the height of the ribbon when collapsed <see cref="P:System.Windows.Forms.Ribbon.MinimizedHeight"/>
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.CaptionButtonsVisible">
            <summary>
            Gets if the caption buttons are currently visible, according to the value specified in <see cref="P:System.Windows.Forms.Ribbon.BorderMode"/>
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.CloseButton">
            <summary>
            Gets the Ribbon's close button
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.MaximizeRestoreButton">
            <summary>
            Gets the Ribbon's maximize-restore button
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.MinimizeButton">
            <summary>
            Gets the Ribbon's minimize button
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.FormHelper">
            <summary>
            Gets or sets the RibbonFormHelper object if the parent form is IRibbonForm
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.ActualBorderMode">
            <summary>
            Gets the actual <see cref="T:System.Windows.Forms.RibbonWindowMode"/> that the ribbon has. 
            It's value may vary from <see cref="P:System.Windows.Forms.Ribbon.BorderMode"/>
            because of computer and operative system capabilities.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.BorderMode">
            <summary>
            Gets or sets the border mode of the ribbon relative to the window where it is contained
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.OrbDropDown">
            <summary>
            Gets the Orb's DropDown
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.PanelCaptionHeight">
            <summary>
            Gets or sets the height of the Panel Caption area.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.QuickAcessToolbar">
            <summary>
            Gets  the QuickAcessToolbar
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.OrbStyle">
            <summary>
            Gets or sets the Style of the orb
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.ThemeColor">
            <summary>
            Gets or sets the theme of the ribbon control
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.OrbText">
            <summary>
            Gets or sets the Text in the orb. Only available when the OrbStyle is set to Office2010
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.OrbImage">
            <summary>
            Gets or sets the Image of the orb
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.OrbVisible">
            <summary>
            Gets or sets if the Ribbon should show an orb on the corner
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.OrbSelected">
            <summary>
            Gets or sets if the Orb is currently selected
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.OrbPressed">
            <summary>
            Gets or sets if the Orb is currently pressed
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.CaptionBarSize">
            <summary>
            Gets the Height of the caption bar
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.OrbBounds">
            <summary>
            Gets the bounds of the orb
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.NextTab">
            <summary>
            Gets the next tab to be activated
            </summary>
            <returns></returns>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.PreviousTab">
            <summary>
            Gets the next tab to be activated
            </summary>
            <returns></returns>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.TabTextMargin">
            <summary>
            Gets or sets the internal spacing between the tab and its text
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.DropDownMargin">
            <summary> 
            Gets or sets the margis of the DropDowns shown by the Ribbon
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.ItemPadding">
            <summary>
            Gets or sets the external spacing of items on panels
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.ItemMargin">
            <summary>
            Gets or sets the internal spacing of items
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.ActiveTab">
            <summary>
            Gets or sets the tab that is currently active
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.PanelSpacing">
            <summary>
            Gets or sets the spacing leaded between panels
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.PanelPadding">
            <summary>
            Gets or sets the external spacing of panels inside of tabs
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.PanelMargin">
            <summary>
            Gets or sets the internal spacing of panels inside of tabs
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.TabSpacing">
            <summary>
            Gets or sets the spacing between tabs
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.Tabs">
            <summary>
            Gets the collection of RibbonTab tabs
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.Minimized">
            <summary>
            Gets or sets a value indicating if the Ribbon supports being minimized
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.Contexts">
            <summary>
            Gets the collection of Contexts of this Ribbon
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.Renderer">
            <summary>
            Gets or sets the Renderer for this Ribbon control
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.TabContentMargin">
            <summary>
            Gets or sets the internal spacing of the tab content pane
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.TabContentPadding">
            <summary>
            Gets or sets the external spacing of the tabs content pane
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.TabsMargin">
            <summary>
            Gets a value indicating the external spacing of tabs
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.TabsPadding">
            <summary>
            Gets a value indicating the internal spacing of tabs
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.OrbsPadding">
            <summary>
            Gets a value indicating the internal spacing of the orb
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.MaximumSize">
            <summary>
            Overriden. The maximum size is fixed
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.MinimumSize">
            <summary>
            Overriden. The minimum size is fixed
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.Dock">
            <summary>
            Overriden. The default dock of the ribbon is top
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.Sensor">
            <summary>
            Gets or sets the current panel sensor for this ribbon
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.CaptionBarVisible">
            <summary>
            sets or gets the visibility of the caption bar
            </summary>
        </member>
        <member name="P:System.Windows.Forms.Ribbon.RibbonTabFont">
            <summary>
            Gets or sets the Font associated with Ribbon tabs and the ORB.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.Ribbon._mouseHook_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Resends the mousedown to PopupManager
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.Ribbon._mouseHook_MouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Checks if MouseWheel should be raised
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.OnOrbClicked(System.EventArgs)">
            <summary>
            Raises the OrbClicked event
            </summary>
            <param name="e">event data</param>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.OnOrbDoubleClicked(System.EventArgs)">
            <summary>
            Raises the OrbDoubleClicked
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.SetUpHooks">
            <summary>
            Initializes hooks
            </summary>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.ShowOrbDropDown">
            <summary>
            Shows the Orb's dropdown
            </summary>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.ShowOrbDropDown(System.Drawing.Point)">
            <summary>
            Shows the Orb's dropdown at the specified point.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.RenewSensor">
            <summary>
            Drops out the old sensor and creates a new one
            </summary>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.SetActualBorderMode(System.Windows.Forms.RibbonWindowMode)">
            <summary>
            Sets the value of the <see cref="P:System.Windows.Forms.Ribbon.BorderMode"/> property
            </summary>
            <param name="borderMode">Actual border mode accquired</param>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.SetCaptionButtonsVisible(System.Boolean)">
            <summary>
            Sets the value of the <see cref="P:System.Windows.Forms.Ribbon.CaptionButtonsVisible"/> property
            </summary>
            <param name="visible">Value to set to the caption buttons</param>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.SuspendUpdating">
            <summary>
            Suspends any drawing/regions update operation
            </summary>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.ResumeUpdating">
            <summary>
            Resumes any drawing/regions update operation
            </summary>
            <param name="update"></param>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.ResumeUpdating(System.Boolean)">
            <summary>
            Resumes any drawing/regions update operation
            </summary>
            <param name="update"></param>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.RemoveHelperControls">
            <summary>
            Removes all helper controls placed by any reason.
            Contol's visibility is set to false before removed.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.TabHitTest(System.Int32,System.Int32)">
            <summary>
            Hittest on tab
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns>true if a tab has been clicked</returns>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.UpdateRegions">
            <summary>
            Updates the regions of the tabs and the tab content bounds of the active tab
            </summary>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.UpdateRegions(System.Drawing.Graphics)">
            <summary>
            Updates the regions of the tabs and the tab content bounds of the active tab
            </summary>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.OnRegionsChanged">
            <summary>
            Forces a size recalculation on the entire control
            </summary>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.RedrawTab(System.Windows.Forms.RibbonTab)">
            <summary>
            Redraws the specified tab
            </summary>
            <param name="tab"></param>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.SetSelectedTab(System.Windows.Forms.RibbonTab)">
            <summary>
            Sets the currently selected tab
            </summary>
            <param name="tab"></param>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.SuspendSensor">
            <summary>
            Suspends the sensor activity
            </summary>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.ResumeSensor">
            <summary>
            Resumes the sensor activity
            </summary>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.RedrawArea(System.Drawing.Rectangle)">
            <summary>
            Redraws the specified area on the sensor's control
            </summary>
            <param name="area"></param>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.ActivateNextTab">
            <summary>
            Activates the next tab available
            </summary>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.ActivatePreviousTab">
            <summary>
            Activates the previous tab available
            </summary>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.OrbMouseDown">
            <summary>
            Handles the mouse down on the orb area
            </summary>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.PaintOn(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paints the Ribbon on the specified device
            </summary>
            <param name="g">Device where to paint on</param>
            <param name="clip">Clip rectangle</param>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.OnActiveTabChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Ribbon.ActiveTabChanged"/> event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.OnActualBorderModeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="P:System.Windows.Forms.Ribbon.ActualBorderMode"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.OnCaptionButtonsVisibleChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Ribbon.CaptionButtonsVisibleChanged"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.OnExpandedChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Ribbon.ExpandedChanged"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overriden. Raises the Paint event and draws all the Ribbon content
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.OnClick(System.EventArgs)">
            <summary>
            Overriden. Raises the Click event and tunnels the message to child elements
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.OnMouseEnter(System.EventArgs)">
            <summary>
            Overriden. Riases the MouseEnter event and tunnels the message to child elements
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.OnMouseLeave(System.EventArgs)">
            <summary>
            Overriden. Raises the MouseLeave  event and tunnels the message to child elements
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overriden. Raises the MouseMove event and tunnels the message to child elements
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overriden. Raises the MouseUp event and tunnels the message to child elements
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overriden. Raises the MouseDown event and tunnels the message to child elements
            </summary>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the mouse wheel
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.OnSizeChanged(System.EventArgs)">
            <summary>
            Overriden. Raises the OnSizeChanged event and performs layout calculations
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:System.Windows.Forms.Ribbon.OnParentChanged(System.EventArgs)">
            <summary>
            Handles when its parent has changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:System.Windows.Forms.RibbonButton.DropDownShowing">
            <summary>
            Occurs when the dropdown is about to be displayed
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.#ctor">
            <summary>
            Creates a new button
            </summary>
            <param name="image">Image of the button (32 x 32 suggested)</param>
            <param name="smallImage">Image of the button when in medium of compact mode (16 x 16 suggested)</param>
            <param name="style">Style of the button</param>
            <param name="text">Text of the button</param>
        </member>
        <member name="P:System.Windows.Forms.RibbonButton.SelectedItem">
            <summary>
            Gets the last DropDown Item that was clicked
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButton.SelectedValue">
            <summary>
            Gets or sets the value of selected item on the dropdown.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButton.DropDown">
            <summary>
            Gets the DropDown of the button
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButton.DrawIconsBar">
            <summary>
            Gets or sets if the icons bar should be drawn
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButton.CheckOnClick">
            <summary>
            Gets or sets a value indicating if the <see cref="!:Checked"/> property should be toggled
            when button is clicked
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButton.DropDownResizable">
            <summary>
            Gets or sets a value indicating if the DropDown should be resizable
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButton.ImageBounds">
            <summary>
            Gets the bounds where the <see cref="T:System.Drawing.Image"/> or <see cref="P:System.Windows.Forms.RibbonButton.SmallImage"/> will be drawn.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButton.TextBounds">
            <summary>
            Gets the bounds where the <see cref="N:System.Text"/> of the button will be drawn
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButton.DropDownVisible">
            <summary>
            Gets if the DropDown is currently visible
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButton.DropDownArrowSize">
            <summary>
            Gets or sets the size of the dropdown arrow
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButton.DropDownArrowDirection">
            <summary>
            Gets or sets the direction where drop down's arrow should be pointing to
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButton.Style">
            <summary>
            Gets the style of the button
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButton.DropDownItems">
            <summary>
            Gets the collection of items shown on the dropdown pop-up when Style allows it
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButton.ButtonFaceBounds">
            <summary>
            Gets the bounds of the button face
            </summary>
            <remarks>When Style is different from SplitDropDown and SplitBottomDropDown, ButtonFaceBounds is the same area than DropDownBounds</remarks>
        </member>
        <member name="P:System.Windows.Forms.RibbonButton.DropDownBounds">
            <summary>
            Gets the bounds of the dropdown button
            </summary>
            <remarks>When Style is different from SplitDropDown and SplitBottomDropDown, ButtonFaceBounds is the same area than DropDownBounds</remarks>
        </member>
        <member name="P:System.Windows.Forms.RibbonButton.DropDownSelected">
            <summary>
            Gets if the dropdown part of the button is selected
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButton.DropDownPressed">
            <summary>
            Gets if the dropdown part of the button is pressed
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButton.SmallImage">
            <summary>
            Gets or sets the image of the button when in compact of medium size mode
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButton.MinimumSize">
            <summary>
            Gets or sets the minimum size for this Item.  Only applies when in Large Size Mode.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButton.MaximumSize">
            <summary>
            Gets or sets the maximum size for this Item.  Only applies when in Large Size Mode.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.SetDropDownMargin(System.Windows.Forms.Padding)">
            <summary>
            Sets the value of the <see cref="!:DropDownMargin"/> property
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.PerformClick">
            <summary>
            Performs a click on the button
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.CreateImage(System.Int32)">
            <summary>
            Creates a new Transparent, empty image
            </summary>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.CreateDropDown">
            <summary>
            Creates the DropDown menu
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.OnPaint(System.Object,System.Windows.Forms.RibbonElementPaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.OnPaintText(System.Windows.Forms.RibbonElementPaintEventArgs)">
            <summary>
            Renders text of the button
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.OnPaintImage(System.Windows.Forms.RibbonElementPaintEventArgs)">
            <summary>
            Renders the image of the button
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.OnPaintBackground(System.Windows.Forms.RibbonElementPaintEventArgs)">
            <summary>
            Renders the background of the buton
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.SetBounds(System.Drawing.Rectangle)">
            <summary>
            Sets the bounds of the button
            </summary>
            <param name="bounds"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.OnGetImageBounds(System.Windows.Forms.RibbonElementSizeMode,System.Drawing.Rectangle)">
            <summary>
            Sets the bounds of the image of the button when SetBounds is called.
            Override this method to change image bounds
            </summary>
            <param name="sMode">Mode which is being measured</param>
            <param name="bounds">Bounds of the button</param>
            <remarks>
            The measuring occours in the following order:
            <list type="">
            <item>OnSetImageBounds</item>
            <item>OnSetTextBounds</item>
            <item>OnSetDropDownBounds</item>
            <item>OnSetButtonFaceBounds</item>
            </list>
            </remarks>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.OnGetTextBounds(System.Windows.Forms.RibbonElementSizeMode,System.Drawing.Rectangle)">
            <summary>
            Sets the bounds of the text of the button when SetBounds is called.
            Override this method to change image bounds
            </summary>
            <param name="sMode">Mode which is being measured</param>
            <param name="bounds">Bounds of the button</param>
            <remarks>
            The measuring occours in the following order:
            <list type="">
            <item>OnSetImageBounds</item>
            <item>OnSetTextBounds</item>
            <item>OnSetDropDownBounds</item>
            <item>OnSetButtonFaceBounds</item>
            </list>
            </remarks>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.OnGetDropDownBounds(System.Windows.Forms.RibbonElementSizeMode,System.Drawing.Rectangle)">
            <summary>
            Sets the bounds of the dropdown part of the button when SetBounds is called.
            Override this method to change image bounds
            </summary>
            <param name="sMode">Mode which is being measured</param>
            <param name="bounds">Bounds of the button</param>
            <remarks>
            The measuring occours in the following order:
            <list type="">
            <item>OnSetImageBounds</item>
            <item>OnSetTextBounds</item>
            <item>OnSetDropDownBounds</item>
            <item>OnSetButtonFaceBounds</item>
            </list>
            </remarks>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.OnGetButtonFaceBounds(System.Windows.Forms.RibbonElementSizeMode,System.Drawing.Rectangle)">
            <summary>
            Sets the bounds of the button face part of the button when SetBounds is called.
            Override this method to change image bounds
            </summary>
            <param name="sMode">Mode which is being measured</param>
            <param name="bounds">Bounds of the button</param>
            <remarks>
            The measuring occours in the following order:
            <list type="">
            <item>OnSetImageBounds</item>
            <item>OnSetTextBounds</item>
            <item>OnSetDropDownBounds</item>
            <item>OnSetButtonFaceBounds</item>
            </list>
            </remarks>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.MeasureStringLargeSize(System.Drawing.Graphics,System.String,System.Drawing.Font)">
            <summary>
            Measures the string for the large size
            </summary>
            <param name="g"></param>
            <param name="text"></param>
            <param name="font"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.MeasureSize(System.Object,System.Windows.Forms.RibbonElementMeasureSizeEventArgs)">
            <summary>
            Measures the size of the button
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.SetDropDownPressed(System.Boolean)">
            <summary>
            Sets the value of the DropDownPressed property
            </summary>
            <param name="pressed">Value that indicates if the dropdown button is pressed</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.SetDropDownSelected(System.Boolean)">
            <summary>
            Sets the value of the DropDownSelected property
            </summary>
            <param name="selected">Value that indicates if the dropdown part of the button is selected</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.ShowDropDown">
            <summary>
            Shows the drop down items of the button, as if the dropdown part has been clicked
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.OnGetDropDownMenuLocation">
            <summary>
            Gets the location where the dropdown menu will be shown
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.OnGetDropDownMenuSize">
            <summary>
            Gets the size of the dropdown. If Size.Empty is returned, 
            size will be measured automatically
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.DropDown_Closed(System.Object,System.EventArgs)">
            <summary>
            Handles the closing of the dropdown
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.IgnoreDeactivation">
            <summary>
            Ignores deactivation of canvas if it is a volatile window
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.CloseDropDown">
            <summary>
            Closes the DropDown if opened
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.ToString">
            <summary>
            Overriden. Informs the button text
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.SetDropDownVisible(System.Boolean)">
            <summary>
            Sets the value of DropDownVisible
            </summary>
            <param name="visible"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonButton.OnDropDownShowing(System.EventArgs)">
            <summary>
            Raises the DropDownShowing event
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:System.Windows.Forms.RibbonButtonCollection.OwnerList">
            <summary>
            Gets the list that owns the collection (If any)
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonButtonCollection.CheckRestrictions(System.Windows.Forms.RibbonButton)">
            <summary>
            Checks for the restrictions that buttons should have on the RibbonButton List
            </summary>
            <param name="button"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonButtonCollection.Add(System.Windows.Forms.RibbonItem)">
            <summary>
            Adds the specified item to the collection
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonButtonCollection.AddRange(System.Collections.Generic.IEnumerable{System.Windows.Forms.RibbonItem})">
            <summary>
            Adds the specified range of items
            </summary>
            <param name="items">Items to add</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonButtonCollection.Insert(System.Int32,System.Windows.Forms.RibbonItem)">
            <summary>
            Inserts the specified item at the desired index
            </summary>
            <param name="index">Desired index of the item</param>
            <param name="item">Item to insert</param>
        </member>
        <member name="P:System.Windows.Forms.RibbonCanvasEventArgs.Owner">
            <summary>
            Gets or sets the Ribbon that raised the event
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonCanvasEventArgs.Graphics">
            <summary>
            Gets or sets the graphics to paint
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonCanvasEventArgs.Bounds">
            <summary>
            Gets or sets the bounds that should be painted
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonCanvasEventArgs.Canvas">
            <summary>
            Gets or sets the control where to be painted
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonCaptionButton.CaptionButton">
            <summary>
            Defines the possible caption buttons
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonCaptionButton.GetCharFor(System.Windows.Forms.RibbonCaptionButton.CaptionButton)">
            <summary>
            Gets the character to render the specified button type
            </summary>
            <param name="type">type of button</param>
            <returns>Character to use with "Marlett" font in Windows, some other representative characters when in other O.S.</returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonCaptionButton.#ctor(System.Windows.Forms.RibbonCaptionButton.CaptionButton)">
            <summary>
            Creates a new CaptionButton
            </summary>
            <param name="buttonType"></param>
        </member>
        <member name="P:System.Windows.Forms.RibbonCaptionButton.CaptionButtonType">
            <summary>
            Gets the type of caption button this is
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonCaptionButton.SetCaptionButtonType(System.Windows.Forms.RibbonCaptionButton.CaptionButton)">
            <summary>
            Sets value to the type of caption button
            </summary>
            <param name="buttonType"></param>
        </member>
        <member name="E:System.Windows.Forms.RibbonCheckBox.CheckBoxCheckChanged">
            <summary>
            Raised when the <see cref="!:CheckBox Checked"/> property value has changed
            </summary>
        </member>
        <member name="E:System.Windows.Forms.RibbonCheckBox.CheckBoxCheckChanging">
            <summary>
            Raised when the <see cref="!:CheckBox Checked"/> property value is changing
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonCheckBox.Style">
            <summary>
            Gets or sets the style of the checkbox item
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonCheckBox.CheckBoxOrientation">
            <summary>
            Gets or sets the width of the Label
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonCheckBox.LabelBounds">
            <summary>
            Gets the bounds of the label that is shown next to the textbox
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonCheckBox.LabelVisible">
            <summary>
            Gets a value indicating if the label is currently visible
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonCheckBox.CheckBoxBounds">
            <summary>
            Gets the bounds of the text
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonCheckBox.LabelWidth">
            <summary>
            Gets or sets the width of the Label
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonCheckBox.MeasureHeight">
            <summary>
            Measures the suposed height of the boxbox
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonCheckBox.OnCheckChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="!:CheckBox Check Changed"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonCheckBox.OnCheckChanging(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="!:CheckBox Check Changing"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:System.Windows.Forms.RibbonColorChooser">
            <summary>
            A RibbonButton that incorporates a <see cref="P:System.Windows.Forms.RibbonColorChooser.Color"/> property and
            draws this color below the displaying <see cref="T:System.Drawing.Image"/> or <see cref="!:SmallImage"/>
            </summary>
        </member>
        <member name="E:System.Windows.Forms.RibbonColorChooser.ColorChanged">
            <summary>
            Raised when the <see cref="P:System.Windows.Forms.RibbonColorChooser.Color"/> property has been changed
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonColorChooser.ImageColorHeight">
            <summary>
            Gets or sets the height of the color preview on the <see cref="T:System.Drawing.Image"/>
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonColorChooser.SmallImageColorHeight">
            <summary>
            Gets or sets the height of the color preview on the <see cref="!:SmallImage"/>
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonColorChooser.Color">
            <summary>
            Gets or sets the currently chosen color
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonColorChooser.OnColorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.RibbonColorChooser.ColorChanged"/>
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:System.Windows.Forms.RibbonComboBox.DropDownShowing">
            <summary>
            Raised when the DropDown is about to be displayed
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonComboBox.DropDownMaxHeight">
            <summary>
            Gets or sets the maximum height for the dropdown window.  0 = autosize.  If the size is smaller than the contents then scrollbars will be shown.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonComboBox.DropDownVisible">
            <summary>
            Gets or sets a value indicating if the DropDown portion of the combo box is currently shown.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonComboBox.DropDownResizable">
            <summary>
            Gets or sets a value indicating if the DropDown should be resizable
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonComboBox.TextBoxTextBounds">
            <summary>
            Overriden.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonComboBox.DropDownItems">
            <summary>
            Gets the collection of items to be displayed on the dropdown
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonComboBox.SelectedItem">
            <summary>
            Gets the selected of item on the dropdown
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonComboBox.SelectedValue">
            <summary>
            Gets or sets the value of selected item on the dropdown.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonComboBox.OnDropDownShowing(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.RibbonComboBox.DropDownShowing"/> event;
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:System.Windows.Forms.RibbonComboBox.DrawIconsBar">
            <summary>
            Gets or sets if the icons bar should be drawn
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonComboBox.ShowDropDown">
            <summary>
            Shows the DropDown
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonComboBox.OnGetDropDownMenuLocation">
            <summary>
            Gets the location where the dropdown menu will be shown
            </summary>
            <returns></returns>
        </member>
        <member name="P:System.Windows.Forms.RibbonComboBox.DropDownButtonBounds">
            <summary>
            Gets or sets the bounds of the DropDown button
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonComboBox.DropDownButtonVisible">
            <summary>
            Gets a value indicating if the DropDown is currently visible
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonComboBox.DropDownButtonSelected">
            <summary>
            Gets a value indicating if the DropDown button is currently selected
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonComboBox.DropDownButtonPressed">
            <summary>
            Gets a value indicating if the DropDown button is currently pressed
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonDescriptionMenuItem">
            <summary>
            Large menu item with a description bellow the text
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonDescriptionMenuItem.#ctor(System.String)">
            <summary>
            Creates a new menu item with description
            </summary>
            <param name="text">Text of the menuitem</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonDescriptionMenuItem.#ctor(System.String,System.String)">
            <summary>
            Creates a new menu item with description
            </summary>
            <param name="text">Text of the menuitem</param>
            <param name="description">Descripion of the menuitem</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonDescriptionMenuItem.#ctor(System.Drawing.Image,System.String,System.String)">
            <summary>
            Creates a new menu item with description
            </summary>
            <param name="image">Image for the menuitem</param>
            <param name="text">Text for the menuitem</param>
            <param name="description">Description for the menuitem</param>
        </member>
        <member name="P:System.Windows.Forms.RibbonDescriptionMenuItem.DescriptionBounds">
            <summary>
            Gets or sets the bounds of the description
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDescriptionMenuItem.Image">
            <summary>
            Gets or sets the image of the menu item
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDescriptionMenuItem.SmallImage">
            <summary>
            This property is not relevant for this class
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDescriptionMenuItem.Description">
            <summary>
            Gets or sets the description of the button
            </summary>
        </member>
        <member name="E:System.Windows.Forms.RibbonHost.SizeModeChanging">
            <summary>
            Occurs when the SizeMode of the controls container is changing. if you manually set the size of the control you need to set the Handled flag to true.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonHost.HostedControl">
            <summary>
            Gets or sets the control that this item willl host
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonHost.OnPaint(System.Object,System.Windows.Forms.RibbonElementPaintEventArgs)">
            <summary>
            Raises the paint event and draws the
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonHost.SetBounds(System.Drawing.Rectangle)">
            <summary>
            Sets the bounds of the panel
            </summary>
            <param name="bounds"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonHost.MeasureSize(System.Object,System.Windows.Forms.RibbonElementMeasureSizeEventArgs)">
            <summary>
            Measures the size of the panel on the mode specified by the event object
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHost.HostCompleted">
            <summary>
            Call this method when you need to close a popup that the control is contained in
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonHost.OnSizeModeChanging(System.Windows.Forms.RibbonHostSizeModeHandledEventArgs@)">
            <summary>
            Raises the <see cref="!:SizeModeChanged"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonHostSizeModeHandledEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.RibbonElementSizeMode)">
            <summary>
            Creates a new RibbonElementMeasureSizeEventArgs object
            </summary>
            <param name="graphics">Device info to draw and measure</param>
            <param name="sizeMode">Size mode to measure</param>
        </member>
        <member name="P:System.Windows.Forms.RibbonHostSizeModeHandledEventArgs.SizeMode">
            <summary>
            Gets the size mode to measure
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonHostSizeModeHandledEventArgs.Graphics">
            <summary>
            Gets the device to measure objects
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonLabel.MeasureSize(System.Object,System.Windows.Forms.RibbonElementMeasureSizeEventArgs)">
            <summary>
            Measures the size of the panel on the mode specified by the event object
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonLabel.OnPaint(System.Object,System.Windows.Forms.RibbonElementPaintEventArgs)">
            <summary>
            Raises the paint event and draws the
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonLabel.SetBounds(System.Drawing.Rectangle)">
            <summary>
            Sets the bounds of the panel
            </summary>
            <param name="bounds"></param>
        </member>
        <member name="P:System.Windows.Forms.RibbonDesigner.SelectedElement">
            <summary>
            Gets or sets the currently selected RibbonElement
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDesigner.Ribbon">
            <summary>
            Gets the Ribbon of the designer
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonDesigner.CreteOrbMenuItem(System.Type)">
            <summary>
            Creates an Orb's MenuItem
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonDesigner.CreteOrbRecentItem(System.Type)">
            <summary>
            Creates an Orb's RecentItem
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonDesigner.CreteOrbOptionItem(System.Type)">
            <summary>
            Creates an Orb's OptionItem
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonDesigner.changeService_ComponentRemoved(System.Object,System.ComponentModel.Design.ComponentEventArgs)">
            <summary>
            Catches the event of a component on the ribbon being removed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDown.DropDownMaxHeight">
            <summary>
            Sets the maximum height in pixels for the dropdown window. Enter 0 for autosize. If the contents is larger than the window scrollbars will be shown.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDown.ScrollBarSize">
            <summary>
            Gets or sets the width of the scrollbar
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDown.Canvas">
            <summary>
            Gets the control where the item is currently being drawn
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDown.ScrolledPercent">
            <summary>
            Gets the percent of scrolled content
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonDropDown.RedrawScroll">
            <summary>
            Redraws the scroll part of the list
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDown.ThumbSelected">
            <summary>
            Gets if the scrollbar thumb is currently selected
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDown.ThumbPressed">
            <summary>
            Gets if the scrollbar thumb is currently pressed
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDown.ThumbBounds">
            <summary>
            Gets the bounds of the scrollbar thumb
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDown.ButtonUpEnabled">
            <summary>
            Gets a value indicating if the button that scrolls up the content is currently enabled
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDown.ButtonDownEnabled">
            <summary>
            Gets a value indicating if the button that scrolls down the content is currently enabled
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDown.ButtonDownSelected">
            <summary>
            Gets a vaule indicating if the button that scrolls down the content is currently selected
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDown.ButtonDownPressed">
            <summary>
            Gets a vaule indicating if the button that scrolls down the content is currently pressed
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDown.ButtonUpSelected">
            <summary>
            Gets a vaule indicating if the button that scrolls up the content is currently selected
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDown.ContentBounds">
            <summary>
            Gets the bounds of the content where items are shown
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDown.ButtonUpPressed">
            <summary>
            Gets a vaule indicating if the button that scrolls up the content is currently pressed
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDown.ButtonUpBounds">
            <summary>
            Gets the bounds of the button that scrolls the items up
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDown.ButtonDownBounds">
            <summary>
            Gets the bounds of the button that scrolls the items down
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDown.DrawIconsBar">
            <summary>
            Gets or sets if the icons bar should be drawn
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDown.SelectionService">
            <summary>
            Gets or sets the selection service for the dropdown
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDown.SizingGripBounds">
            <summary>
            Gets the bounds of the sizing grip
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDown.MeasuringSize">
            <summary>
            Gets or sets the size for measuring items (by default is DropDown)
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDown.ParentItem">
            <summary>
            Gets the parent item of this dropdown
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDown.Sensor">
            <summary>
            Gets the sennsor of this dropdown
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDown.OwnerRibbon">
            <summary>
            Gets the Ribbon this DropDown belongs to
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDown.Items">
            <summary>
            Gets the RibbonItem this dropdown belongs to
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDown.ShowSizingGrip">
            <summary>
            Gets or sets a value indicating if the sizing grip should be visible
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonDropDown.SizingGripHeight">
            <summary>
            Gets or sets the height of the sizing grip area
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonDropDown.UpdateThumbPos">
            <summary>
            Updates the position of the scroll thumb depending on the current offset
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonDropDown.ScrollDown">
            <summary>
            Scrolls the list down
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonDropDown.ScrollUp">
            <summary>
            Scrolls the list up
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonDropDown.ScrollOffset(System.Int32)">
            <summary>
            Pushes the amount of _offset of the top of items
            </summary>
            <param name="amount"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonDropDown.ScrollTo(System.Int32)">
            <summary>
            Scrolls the content to the specified offset
            </summary>
            <param name="offset"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonDropDown.IgnoreNextClickDeactivation">
            <summary>
            Prevents the form from being hidden the next time the mouse clicks on the form.
            It is useful for reacting to clicks of items inside items.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonDropDown.UpdateSize">
            <summary>
            Updates the size of the dropdown
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonDropDown.IgnoreDeactivation">
            <summary>
            Ignores deactivation of canvas if it is a volatile window
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonElementMeasureSizeEventArgs">
            <summary>
            Holds data and tools to measure the size
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonElementMeasureSizeEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.RibbonElementSizeMode)">
            <summary>
            Creates a new RibbonElementMeasureSizeEventArgs object
            </summary>
            <param name="graphics">Device info to draw and measure</param>
            <param name="sizeMode">Size mode to measure</param>
        </member>
        <member name="P:System.Windows.Forms.RibbonElementMeasureSizeEventArgs.SizeMode">
            <summary>
            Gets the size mode to measure
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonElementMeasureSizeEventArgs.Graphics">
            <summary>
            Gets the device to measure objects
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonElementPaintEventArgs">
            <summary>
            Holds data and tools to draw the element
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonElementPaintEventArgs.#ctor(System.Drawing.Rectangle,System.Drawing.Graphics,System.Windows.Forms.RibbonElementSizeMode)">
            <param name="clip">Rectangle clip</param>
            <param name="graphics">Device to draw</param>
            <param name="mode">Size mode to draw</param>
        </member>
        <member name="P:System.Windows.Forms.RibbonElementPaintEventArgs.Clip">
            <summary>
            Area that element should occupy
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonElementPaintEventArgs.Graphics">
            <summary>
            Gets the Device where to draw
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonElementPaintEventArgs.Mode">
            <summary>
            Gets the mode to draw the element
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonElementPaintEventArgs.Control">
            <summary>
            Gets the control where element is being painted
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonElementWithItemCollectionDesigner.Ribbon">
            <summary>
            Gets a reference to the Ribbon that owns the item
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonElementWithItemCollectionDesigner.Collection">
            <summary>
            Gets the collection of items hosted by this item
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonElementWithItemCollectionDesigner.OnGetVerbs">
            <summary>
            Called when verbs must be retrieved
            </summary>
            <returns></returns>
        </member>
        <member name="P:System.Windows.Forms.RibbonElementWithItemCollectionDesigner.Verbs">
            <summary>
            Overriden. Passes the verbs to the designer
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonElementWithItemCollectionDesigner.CreateItem(System.Type)">
            <summary>
            Creates an item of the speciifed type
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonElementWithItemCollectionDesigner.CreateItem(System.Windows.Forms.Ribbon,System.Windows.Forms.RibbonItemCollection,System.Type)">
            <summary>
            Creates an item of the specified type and adds it to the specified collection
            </summary>
            <param name="ribbon"></param>
            <param name="collection"></param>
            <param name="t"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonForm.OnNotifyMessage(System.Windows.Forms.Message)">
            <summary>
            Just for debugging messages
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonForm.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Overrides the WndProc funciton
            </summary>
            <param name="m"></param>
        </member>
        <member name="P:System.Windows.Forms.RibbonForm.Helper">
            <summary>
            Gets the helper for making the form a ribbon form
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonFormHelper">
            <summary>
            This class is used to make a form able to contain a ribbon on the non-client area.
            For further instrucions search "ribbon non-client" on www.menendezpoo.com
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonFormHelper.NonClientHitTestResult">
            <summary>
            Possible results of a hit test on the non client area of a form
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonFormHelper.#ctor(System.Windows.Forms.Form)">
            <summary>
            Creates a new helper for the specified form
            </summary>
            <param name="f"></param>
        </member>
        <member name="P:System.Windows.Forms.RibbonFormHelper.Ribbon">
            <summary>
            Gets or sets the Ribbon related with the form
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonFormHelper.CaptionHeight">
            <summary>
            Gets or sets the height of the caption bar relative to the form
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonFormHelper.Form">
            <summary>
            Gets the form this class is helping
            </summary>   
        </member>
        <member name="P:System.Windows.Forms.RibbonFormHelper.Margins">
            <summary>
            Gets the margins of the non-client area
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonFormHelper.MarginsChecked">
            <summary>
            Gets or sets if the margins are already checked by WndProc
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonFormHelper.DesignMode">
            <summary>
            Gets if the <see cref="P:System.Windows.Forms.RibbonFormHelper.Form"/> is currently in Designer mode
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonFormHelper.UpdateRibbonConditions">
            <summary>
            Checks if ribbon should be docked or floating and updates its size
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonFormHelper.Form_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Called when helped form is activated
            </summary>
            <param name="sender">Object that raised the event</param>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonFormHelper.PaintTitleBar(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draws the title bar of the form when not in glass
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonFormHelper.Form_Activated(System.Object,System.EventArgs)">
            <summary>
            Called when helped form is activated
            </summary>
            <param name="sender">Object that raised the event</param>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonFormHelper.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes the WndProc for a form with a Ribbbon. Returns true if message has been handled
            </summary>
            <param name="m">Message to process</param>
            <returns><c>true</c> if message has been handled. <c>false</c> otherwise</returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonFormHelper.NonClientHitTest(System.Drawing.Point)">
            <summary>
            Performs hit test for mouse on the non client area of the form
            </summary>
            <param name="form">Form to check bounds</param>
            <param name="dwmMargins">Margins of non client area</param>
            <param name="lparam">Lparam of</param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonFormHelper.SetMargins(System.Windows.Forms.Padding)">
            <summary>
            Sets the value of the <see cref="P:System.Windows.Forms.RibbonFormHelper.Margins"/> property;
            </summary>
            <param name="p"></param>
        </member>
        <member name="T:System.Windows.Forms.RibbonMouseSensor">
            <summary>
            Provides mouse functionality to RibbonTab, RibbonPanel and RibbonItem objects on a specified Control
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonMouseSensor.#ctor">
            <summary>
            Initializes inner fields
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonMouseSensor.#ctor(System.Windows.Forms.Control,System.Windows.Forms.Ribbon)">
            <summary>
            Creates a new Empty Sensor
            </summary>
            <param name="control">Control to listen mouse events</param>
            <param name="ribbon">Ribbon that will be affected</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonMouseSensor.#ctor(System.Windows.Forms.Control,System.Windows.Forms.Ribbon,System.Collections.Generic.IEnumerable{System.Windows.Forms.RibbonTab},System.Collections.Generic.IEnumerable{System.Windows.Forms.RibbonPanel},System.Collections.Generic.IEnumerable{System.Windows.Forms.RibbonItem})">
            <summary>
            Creates a new Sensor for specified objects
            </summary>
            <param name="control">Control to listen mouse events</param>
            <param name="ribbon">Ribbon that will be affected</param>
            <param name="tabs">Tabs that will be sensed</param>
            <param name="panels">Panels that will be sensed</param>
            <param name="items">Items that will be sensed</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonMouseSensor.#ctor(System.Windows.Forms.Control,System.Windows.Forms.Ribbon,System.Windows.Forms.RibbonTab)">
            <summary>
            Creates a new Sensor for the specified RibbonTab
            </summary>
            <param name="control">Control to listen to mouse events</param>
            <param name="ribbon">Ribbon that will be affected</param>
            <param name="tab">Tab that will be sensed, from which all panels and items will be extracted to sensing also.</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonMouseSensor.#ctor(System.Windows.Forms.Control,System.Windows.Forms.Ribbon,System.Collections.Generic.IEnumerable{System.Windows.Forms.RibbonItem})">
            <summary>
            Creates a new Sensor for only the specified items
            </summary>
            <param name="control">Control to listen to mouse events</param>
            <param name="ribbon">Ribbon that will be affected</param>
            <param name="items">Items that will be sensed</param>
        </member>
        <member name="P:System.Windows.Forms.RibbonMouseSensor.Control">
            <summary>
            Gets the control where the sensor listens to mouse events
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonMouseSensor.Disposed">
            <summary>
            Gets if the sensor has already been 
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonMouseSensor.HittedTab">
            <summary>
            Gets the RibbonTab hitted by the last <see cref="M:System.Windows.Forms.RibbonMouseSensor.HitTest(System.Drawing.Point)"/>
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonMouseSensor.HittedTabScroll">
            <summary>
            Gets if the test hit resulted on some scroll button of the hitted tab
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonMouseSensor.HittedTabScrollLeft">
            <summary>
            Gets or sets if the last hit test resulted on the left scroll of the hitted tab
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonMouseSensor.HittedTabScrollRight">
            <summary>
            Gets or sets if the last hit test resulted on the right scroll of the hitted tab
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonMouseSensor.HittedPanel">
            <summary>
            Gets the RibbonPanel hitted by the last <see cref="M:System.Windows.Forms.RibbonMouseSensor.HitTest(System.Drawing.Point)"/>
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonMouseSensor.HittedItem">
            <summary>
            Gets the RibbonItem hitted by the last <see cref="M:System.Windows.Forms.RibbonMouseSensor.HitTest(System.Drawing.Point)"/>
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonMouseSensor.HittedSubItem">
            <summary>
            Gets the RibbonItem (on other RibbonItem) hitted by the last <see cref="M:System.Windows.Forms.RibbonMouseSensor.HitTest(System.Drawing.Point)"/>
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonMouseSensor.IsSupsended">
            <summary>
            Gets if the sensor is currently suspended
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonMouseSensor.ItemsSource">
            <summary>
            Gets or ests the source of items what limits the sensing.
            If collection is null, all items on the <see cref="P:System.Windows.Forms.RibbonMouseSensor.Items"/> property will be sensed.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonMouseSensor.Items">
            <summary>
            Gets the collection of items this sensor affects.
            Sensing can be limitated by the <see cref="!:ItemsLimit"/> property
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonMouseSensor.PanelLimit">
            <summary>
            Gets or sets the Panel that will be the limit to be sensed.
            If set to null, all panels in the <see cref="P:System.Windows.Forms.RibbonMouseSensor.Panels"/> property will be sensed.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonMouseSensor.Panels">
            <summary>
            Gets the collection of panels this sensor affects.
            Sensing can be limitated by the <see cref="P:System.Windows.Forms.RibbonMouseSensor.PanelLimit"/> property
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonMouseSensor.Ribbon">
            <summary>
            Gets the ribbon this sensor responds to
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonMouseSensor.SelectedTab">
            <summary>
            Gets or sets the last selected tab
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonMouseSensor.SelectedPanel">
            <summary>
            Gets or sets the last selected panel
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonMouseSensor.SelectedItem">
            <summary>
            Gets or sets the last selected item
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonMouseSensor.SelectedSubItem">
            <summary>
            Gets or sets the last selected sub-item
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonMouseSensor.TabLimit">
            <summary>
            Gets or sets the Tab that will be the only to be sensed. 
            If set to null, all tabs in the <see cref="P:System.Windows.Forms.RibbonMouseSensor.Tabs"/> property will be sensed.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonMouseSensor.Tabs">
            <summary>
            Gets the collection of tabs this sensor affects. 
            Sensing can be limitated by the <see cref="P:System.Windows.Forms.RibbonMouseSensor.TabLimit"/> property
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonMouseSensor.AddHandlers">
            <summary>
            Adds the necessary handlers to the control
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonMouseSensor.Control_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseUp event on the control
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonMouseSensor.Control_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseDown on the control
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonMouseSensor.Control_MouseLeave(System.Object,System.EventArgs)">
            <summary>
            Handles the MouseLeave on the control
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonMouseSensor.Control_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseMove on the control
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonMouseSensor.HitTest(System.Drawing.Point)">
            <summary>
            Performs a hit-test and specifies hitted objects on properties: <see cref="P:System.Windows.Forms.RibbonMouseSensor.HittedPanel"/>, 
            <see cref="P:System.Windows.Forms.RibbonMouseSensor.HittedTab"/>, <see cref="P:System.Windows.Forms.RibbonMouseSensor.HittedItem"/> and <see cref="P:System.Windows.Forms.RibbonMouseSensor.HittedSubItem"/>
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonMouseSensor.RemoveHandlers">
            <summary>
            Removes the added handlers to the Control
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonMouseSensor.Resume">
            <summary>
            Resumes the sensing after being suspended by <see cref="M:System.Windows.Forms.RibbonMouseSensor.Suspend"/>
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonMouseSensor.Suspend">
            <summary>
            Suspends sensing until <see cref="M:System.Windows.Forms.RibbonMouseSensor.Resume"/> is called
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonOrbAdornerGlyph.MenuVisible">
            <summary>
            Gets or sets if the orb menu is visible on the desginer
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonOrbDropDown.AllItems">
            <summary>
            Gets all items involved in the dropdown
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonOrbDropDown.ContentMargin">
            <summary>
            Gets the margin of the content bounds
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonOrbDropDown.ContentBounds">
            <summary>
            Gets the bounds of the content (where menu buttons are)
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonOrbDropDown.ContentButtonsBounds">
            <summary>
            Gets the bounds of the content part that contains the buttons on the left
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonOrbDropDown.ContentButtonsMinWidth">
            <summary>
            Gets or sets the minimum width for the content buttons.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonOrbDropDown.ContentRecentItemsBounds">
            <summary>
            Gets the bounds fo the content part that contains the recent-item list
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonOrbDropDown.ContentRecentItemsCaptionBounds">
            <summary>
            Gets the bounds of the caption area on the content part of the recent-item list
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonOrbDropDown.RecentItemsCaptionLineSpacing">
            <summary>
            Gets the bounds of the caption area on the content part of the recent-item list
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonOrbDropDown.ContentRecentItemsMinWidth">
            <summary>
            Gets or sets the minimum width for the recent items.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonOrbDropDown.RibbonInDesignMode">
            <summary>
            Gets if currently on design mode
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonOrbDropDown.MenuItems">
            <summary>
            Gets the collection of items shown in the menu area
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonOrbDropDown.OptionItems">
            <summary>
            Gets the collection of items shown in the options area (bottom)
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonOrbDropDown.RecentItems">
            <summary>
            Gets the collection of items shown in the recent items area
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonOrbDropDown.RecentItemsCaption">
            <summary>
            Gets or Sets the caption for the Recent Items area
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonOrbDropDown.Ribbon">
            <summary>
            Gets the ribbon that owns this dropdown
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonOrbDropDown.Sensor">
            <summary>
            Gets the sensor of the dropdown
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonOrbDropDown.ButtonsGlyphBounds">
            <summary>
            Gets the bounds of the glyph
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonOrbDropDown.ButtonsSeparatorGlyphBounds">
            <summary>
            Gets the bounds of the glyph
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonOrbDropDown.RecentGlyphBounds">
            <summary>
            Gets the bounds of the recent items add glyph
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonOrbDropDown.OptionGlyphBounds">
            <summary>
            Gets the bounds of the option items add glyph
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonOrbDropDown.SeparatorHeight(System.Windows.Forms.RibbonSeparator)">
            <summary>
            Gets the height that a separator should be on the DropDown
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonOrbDropDown.UpdateRegions">
            <summary>
            Updates the regions and bounds of items
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonOrbDropDown.UpdateSensor">
            <summary>
            Refreshes the sensor
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonOrbDropDown.OnRegionsChanged">
            <summary>
            Updates all areas and bounds of items
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonOrbDropDown.SelectOnDesigner(System.Windows.Forms.RibbonItem)">
            <summary>
            Selects the specified item on the designer
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonOrbDropDown.UpdateDesignerSelectedBounds">
            <summary>
            Updates the selection bounds on the designer
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonOrbDropDownEventArgs.RibbonOrbDropDown">
            <summary>
            Gets the RibbonOrbDropDown related to the event
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanelPopup.Panel">
            <summary>
            Gets the panel related to the form
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanelPopup.IgnoreNextClickDeactivation">
            <summary>
            Prevents the form from being hidden the next time the mouse clicks on the form.
            It is useful for reacting to clicks of items inside items.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.RibbonItem.ToolTipPopUp">
            <summary>
            Occurs before a ToolTip is initially displayed.
            <remarks>Use this event to change the ToolTip or Cancel it at all.</remarks>
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonItem.RibbonItem_Click(System.Object,System.EventArgs)">
            <summary>
            Selects the item when in a dropdown, in design mode
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.ContentBounds">
            <summary>
            Gets the bounds of the item's content. (It takes the Ribbon.ItemMargin)
            </summary>
            <remarks>
            Although this is the regular item content bounds, it depends on the logic of the item 
            and how each item handles its own content.
            </remarks>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.Canvas">
            <summary>
            Gets the control where the item is currently being dawn
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.OwnerItem">
            <summary>
            Gets the RibbonItemGroup that owns the item (If any)
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.FlashEnabled">
            <summary>
            Gets or sets a value indicating if the Image should be Flashing
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.FlashIntervall">
            <summary>
            Gets or sets a value indicating the flashing frequency in Milliseconds
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.Text">
            <summary>
            Gets or sets the text that is to be displayed on the item
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.Image">
            <summary>
            Gets or sets the image to be displayed on the item
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.Visible">
            <summary>
            Gets or sets the Visibility of this item
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.Checked">
            <summary>
            Gets or sets a value indicating if the item is currently checked
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.CheckedGroup">
            <summary>
            Determins the other Ribbon Items that belong to this checked group.  When one button is checked the other items in this group will be unchecked automatically.  This only applies to Items that are within the same Ribbon Panel or Dropdown Window.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.SizeMode">
            <summary>
            Gets the item's current SizeMode
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.Selected">
            <summary>
            Gets a value indicating whether the item is selected
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.Pressed">
            <summary>
            Gets a value indicating whether the state of the item is pressed
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.Owner">
            <summary>
            Gets the Ribbon owner of this item
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.Bounds">
            <summary>
            Gets the bounds of the element relative to the Ribbon control
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.Enabled">
            <summary>
            Gets or sets a value indicating if the item is currently enabled
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.ToolTipTitle">
            <summary>
            Gets or sets the tool tip title
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.ToolTipIcon">
            <summary>
            Gets or sets the image of the tool tip
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.ToolTip">
            <summary>
            Gets or sets the tool tip text
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.ToolTipImage">
            <summary>
            Gets or sets the tool tip image
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.Tag">
            <summary>
            Gets or sets the custom object data associated with this control
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.Value">
            <summary>
            Gets or sets the custom string data associated with this control
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.AltKey">
            <summary>
            Gets or sets the key combination that activates this element when the Alt key was pressed
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.OwnerTab">
            <summary>
            Gets the RibbonTab that contains this item
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.OwnerPanel">
            <summary>
            Gets the RibbonPanel where this item is located
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.MaxSizeMode">
            <summary>
            Gets or sets the maximum size mode of the element
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.MinSizeMode">
            <summary>
            Gets or sets the minimum size mode of the element
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.LastMeasuredSize">
            <summary>
            Gets the last result of  MeasureSize
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItem.TextAlignment">
            <summary>
            Sets the alignment of the label text if it exists
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonItem.ClosesDropDownAt(System.Drawing.Point)">
            <summary>
            Gets if owner dropdown must be closed when the item is clicked on the specified point
            </summary>
            <param name="p">Point to test.</param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonItem.NotifyOwnerRegionsChanged">
            <summary>
            Forces the owner Ribbon to update its regions
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonItem.SetOwnerItem(System.Windows.Forms.RibbonItem)">
            <summary>
            Sets the value of the <see cref="P:System.Windows.Forms.RibbonItem.OwnerItem"/> property
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItem.SetOwner(System.Windows.Forms.Ribbon)">
            <summary>
            Sets the Ribbon that owns this item
            </summary>
            <param name="owner">Ribbon that owns this item</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItem.SetOwnerPanel(System.Windows.Forms.RibbonPanel)">
            <summary>
            Sets the value of the OwnerPanel property
            </summary>
            <param name="ownerPanel">RibbonPanel where this item is located</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItem.SetSelected(System.Boolean)">
            <summary>
            Sets the value of the Selected property
            </summary>
            <param name="selected">Value that indicates if the element is selected</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItem.SetPressed(System.Boolean)">
            <summary>
            Sets the value of the Pressed property
            </summary>
            <param name="pressed">Value that indicates if the element is pressed</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItem.SetOwnerTab(System.Windows.Forms.RibbonTab)">
            <summary>
            Sets the value of the OwnerTab property
            </summary>
            <param name="ownerTab">RibbonTab where this item is located</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItem.SetOwnerGroup(System.Windows.Forms.RibbonItemGroup)">
            <summary>
            Sets the value of the OwnerList property
            </summary>
            <param name="ownerList"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItem.GetNearestSize(System.Windows.Forms.RibbonElementSizeMode)">
            <summary>
            Gets the size applying the rules of MaxSizeMode and MinSizeMode properties
            </summary>
            <param name="sizeMode">Suggested sizeMode</param>
            <returns>The nearest size to the specified one</returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonItem.SetLastMeasuredSize(System.Drawing.Size)">
            <summary>
            Sets the value of the LastMeasuredSize property
            </summary>
            <param name="size">Size to set to the property</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItem.SetSizeMode(System.Windows.Forms.RibbonElementSizeMode)">
            <summary>
            Sets the value of the SizeMode property
            </summary>
            <param name="sizeMode"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItem.OnCanvasChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.RibbonItem.CanvasChanged"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItem.OnOwnerChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.RibbonItem.OwnerChanged"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItem.OnMouseEnter(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseEnter event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItem.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItem.OnMouseLeave(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseLeave event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItem.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItem.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItem.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItem.OnDoubleClick(System.EventArgs)">
            <summary>
            Raises the DoubleClick event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItem.RedrawItem">
            <summary>
            Redraws the item area on the Onwer Ribbon
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonItem.SetCanvas(System.Windows.Forms.Control)">
            <summary>
            Sets the canvas of the item
            </summary>
            <param name="canvas"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItem.SetCanvas(System.Windows.Forms.IContainsSelectableRibbonItems,System.Windows.Forms.Control)">
            <summary>
            Recurse on setting the canvas
            </summary>
            <param name="parent"></param>
            <param name="canvas"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.#ctor">
            <summary>
            Creates a new ribbon item collection
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItemCollection.Owner">
            <summary>
            Gets the Ribbon owner of this collection
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItemCollection.OwnerPanel">
            <summary>
            Gets the RibbonPanel where this item is located
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItemCollection.OwnerTab">
            <summary>
            Gets the RibbonTab that contains this item
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.Add(System.Windows.Forms.RibbonItem)">
            <summary>
            Adds the specified item to the collection
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.AddRange(System.Collections.Generic.IEnumerable{System.Windows.Forms.RibbonItem})">
            <summary>
            Adds the specified range of items
            </summary>
            <param name="items">Items to add</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.Insert(System.Int32,System.Windows.Forms.RibbonItem)">
            <summary>
            Inserts the specified item at the desired index
            </summary>
            <param name="index">Desired index of the item</param>
            <param name="item">Item to insert</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.GetItemsLeft(System.Collections.Generic.IEnumerable{System.Windows.Forms.RibbonItem})">
            <summary>
            Gets the left of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.GetItemsRight(System.Collections.Generic.IEnumerable{System.Windows.Forms.RibbonItem})">
            <summary>
            Gets the right of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.GetItemsTop(System.Collections.Generic.IEnumerable{System.Windows.Forms.RibbonItem})">
            <summary>
            Gets the top of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.GetItemsBottom(System.Collections.Generic.IEnumerable{System.Windows.Forms.RibbonItem})">
            <summary>
            Gets the bottom of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.GetItemsWidth(System.Collections.Generic.IEnumerable{System.Windows.Forms.RibbonItem})">
            <summary>
            Gets the width of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.GetItemsHeight(System.Collections.Generic.IEnumerable{System.Windows.Forms.RibbonItem})">
            <summary>
            Gets the height of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.GetItemsBounds(System.Collections.Generic.IEnumerable{System.Windows.Forms.RibbonItem})">
            <summary>
            Gets the bounds of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.GetItemsLeft">
            <summary>
            Gets the left of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.GetItemsRight">
            <summary>
            Gets the right of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.GetItemsTop">
            <summary>
            Gets the top of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.GetItemsBottom">
            <summary>
            Gets the bottom of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.GetItemsWidth">
            <summary>
            Gets the width of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.GetItemsHeight">
            <summary>
            Gets the height of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.GetItemsBounds">
            <summary>
            Gets the bounds of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.MoveTo(System.Drawing.Point)">
            <summary>
            Moves the bounds of items as a group of shapes
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.MoveTo(System.Collections.Generic.IEnumerable{System.Windows.Forms.RibbonItem},System.Drawing.Point)">
            <summary>
            Moves the bounds of items as a group of shapes
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.CenterItemsInto(System.Drawing.Rectangle)">
            <summary>
            Centers the items on the specified rectangle
            </summary>
            <param name="rectangle"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.CenterItemsVerticallyInto(System.Drawing.Rectangle)">
            <summary>
            Centers the items vertically on the specified rectangle
            </summary>
            <param name="rectangle"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.CenterItemsHorizontallyInto(System.Drawing.Rectangle)">
            <summary>
            Centers the items horizontally on the specified rectangle
            </summary>
            <param name="rectangle"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.CenterItemsInto(System.Collections.Generic.IEnumerable{System.Windows.Forms.RibbonItem},System.Drawing.Rectangle)">
            <summary>
            Centers the items on the specified rectangle
            </summary>
            <param name="rectangle"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.CenterItemsVerticallyInto(System.Collections.Generic.IEnumerable{System.Windows.Forms.RibbonItem},System.Drawing.Rectangle)">
            <summary>
            Centers the items vertically on the specified rectangle
            </summary>
            <param name="rectangle"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.CenterItemsHorizontallyInto(System.Collections.Generic.IEnumerable{System.Windows.Forms.RibbonItem},System.Drawing.Rectangle)">
            <summary>
            Centers the items horizontally on the specified rectangle
            </summary>
            <param name="rectangle"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.SetOwner(System.Windows.Forms.Ribbon)">
            <summary>
            Sets the owner Ribbon of the collection
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.SetOwnerTab(System.Windows.Forms.RibbonTab)">
            <summary>
            Sets the owner Tab of the collection
            </summary>
            <param name="tab"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemCollection.SetOwnerPanel(System.Windows.Forms.RibbonPanel)">
            <summary>
            Sets the owner panel of the collection
            </summary>
            <param name="panel"></param>
        </member>
        <member name="T:System.Windows.Forms.RibbonItemGroupItemCollection">
            <summary>
            Represents a collection of items that is hosted by the RibbonItemGroup
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemGroupItemCollection.#ctor(System.Windows.Forms.RibbonItemGroup)">
            <param name="ownerGroup">Group that this collection belongs to</param>
        </member>
        <member name="P:System.Windows.Forms.RibbonItemGroupItemCollection.OwnerGroup">
            <summary>
            Gets the group that owns this item collection
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemGroupItemCollection.Add(System.Windows.Forms.RibbonItem)">
            <summary>
            Adds the specified item to the collection
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemGroupItemCollection.AddRange(System.Collections.Generic.IEnumerable{System.Windows.Forms.RibbonItem})">
            <summary>
            Adds the specified range of items
            </summary>
            <param name="items">Items to add</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemGroupItemCollection.Insert(System.Int32,System.Windows.Forms.RibbonItem)">
            <summary>
            Inserts the specified item at the desired index
            </summary>
            <param name="index">Desired index of the item</param>
            <param name="item">Item to insert</param>
        </member>
        <member name="T:System.Windows.Forms.RibbonButtonList">
            <summary>
            Represents a list of buttons that can be navigated
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButtonList.ScrolledPercent">
            <summary>
            Gets the percent of scrolled content
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonButtonList.RedrawScroll">
            <summary>
            Redraws the scroll part of the list
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButtonList.ThumbSelected">
            <summary>
            Gets if the scrollbar thumb is currently selected
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButtonList.ThumbPressed">
            <summary>
            Gets if the scrollbar thumb is currently pressed
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButtonList.ThumbBounds">
            <summary>
            Gets the bounds of the scrollbar thumb
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButtonList.ButtonDropDownPresent">
            <summary>
            Gets if the DropDown button is present on thelist
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButtonList.DropDownItems">
            <summary>
            Gets the collection of items shown on the dropdown pop-up when Style allows it
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButtonList.ButtonsSizeMode">
            <summary>
            Gets or sets the size that the buttons on the list should be
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButtonList.ButtonUpEnabled">
            <summary>
            Gets a value indicating if the button that scrolls up the content is currently enabled
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButtonList.ButtonDownEnabled">
            <summary>
            Gets a value indicating if the button that scrolls down the content is currently enabled
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButtonList.ButtonDropDownSelected">
            <summary>
            Gets a value indicating if the DropDown button is currently selected
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButtonList.ButtonDropDownPressed">
            <summary>
            Gets a value indicating if the DropDown button is currently pressed
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButtonList.ButtonDownSelected">
            <summary>
            Gets a vaule indicating if the button that scrolls down the content is currently selected
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButtonList.ButtonDownPressed">
            <summary>
            Gets a vaule indicating if the button that scrolls down the content is currently pressed
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButtonList.ButtonUpSelected">
            <summary>
            Gets a vaule indicating if the button that scrolls up the content is currently selected
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButtonList.ButtonUpPressed">
            <summary>
            Gets a vaule indicating if the button that scrolls up the content is currently pressed
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButtonList.ContentBounds">
            <summary>
            Gets the bounds of the content where items are shown
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButtonList.ButtonUpBounds">
            <summary>
            Gets the bounds of the button that scrolls the items up
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButtonList.ButtonDownBounds">
            <summary>
            Gets the bounds of the button that scrolls the items down
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButtonList.ButtonDropDownBounds">
            <summary>
            Gets the bounds of the button that scrolls
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButtonList.ControlButtonsWidth">
            <summary>
            Gets or sets the with of the buttons that allow to navigate thru the list
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButtonList.ItemsWideInLargeMode">
            <summary>
            Gets or sets a value indicating the amount of items to show
            (wide) when SizeMode is Large 
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButtonList.ItemsWideInMediumMode">
            <summary>
            Gets or sets a value indicating the amount of items to show
            (wide) when SizeMode is Medium
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButtonList.ItemsSizeInDropwDownMode">
            <summary>
            Gets or sets a value indicating the amount of items to show
            (wide) when SizeMode is Medium
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonButtonList.Buttons">
            <summary>
            Gets the collection of buttons of the list
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonButtonList.IgnoreDeactivation">
            <summary>
            Ignores deactivation of canvas if it is a volatile window
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonButtonList.RedrawControlButtons">
            <summary>
            Redraws the control buttons: up, down and dropdown
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonButtonList.ScrollOffset(System.Int32)">
            <summary>
            Pushes the amount of _offset of the top of items
            </summary>
            <param name="amount"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonButtonList.ScrollTo(System.Int32)">
            <summary>
            Scrolls the content to the specified offset
            </summary>
            <param name="offset"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonButtonList.ScrollDown">
            <summary>
            Scrolls the list down
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonButtonList.ScrollUp">
            <summary>
            Scrolls the list up
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonButtonList.ShowDropDown">
            <summary>
            Shows the drop down items of the button, as if the dropdown part has been clicked
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonButtonList.CloseDropDown">
            <summary>
            Closes the DropDown if opened
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonButtonList.SetDropDownVisible(System.Boolean)">
            <summary>
            Sets the value of DropDownVisible
            </summary>
            <param name="visible"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonButtonList.UpdateThumbPos">
            <summary>
            Updates the position of the scroll thumb depending on the current offset
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItemBoundsEventArgs.Bounds">
            <summary>
            Gets or sets the suggested bounds
            </summary>
        </member>
        <member name="E:System.Windows.Forms.RibbonPanel.MouseEnter">
            <summary>
            Occurs when the mouse pointer enters the panel
            </summary>
        </member>
        <member name="E:System.Windows.Forms.RibbonPanel.MouseLeave">
            <summary>
            Occurs when the mouse pointer leaves the panel
            </summary>
        </member>
        <member name="E:System.Windows.Forms.RibbonPanel.MouseMove">
            <summary>
            Occurs when the mouse pointer is moved inside the panel
            </summary>
        </member>
        <member name="E:System.Windows.Forms.RibbonPanel.Paint">
            <summary>
            Occurs when the panel is redrawn
            </summary>
        </member>
        <member name="E:System.Windows.Forms.RibbonPanel.Resize">
            <summary>
            Occurs when the panel is resized
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.#ctor">
            <summary>
            Creates a new RibbonPanel
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.#ctor(System.String)">
            <summary>
            Creates a new RibbonPanel with the specified text
            </summary>
            <param name="text">Text of the panel</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.#ctor(System.String,System.Windows.Forms.RibbonPanelFlowDirection)">
            <summary>
            Creates a new RibbonPanel with the specified text and panel flow direction
            </summary>
            <param name="text">Text of the panel</param>
            <param name="flowsTo">Flow direction of the content items</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.#ctor(System.String,System.Windows.Forms.RibbonPanelFlowDirection,System.Collections.Generic.IEnumerable{System.Windows.Forms.RibbonItem})">
            <summary>
            Creates a new RibbonPanel with the specified text and panel flow direction
            </summary>
            <param name="text">Text of the panel</param>
            <param name="flowsTo">Flow direction of the content items</param>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanel.Collapsed">
            <summary>
            Gets if this panel is currenlty collapsed
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanel.ButtonMoreVisible">
            <summary>
            Gets or sets the visibility of the "More" button
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanel.ButtonMoreEnabled">
            <summary>
            Gets or sets a value indicating if the "More" button should be enabled
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanel.ButtonMoreSelected">
            <summary>
            Gets if the "More" button is currently selected
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanel.ButtonMorePressed">
            <summary>
            Gets if the "More" button is currently pressed
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanel.ButtonMoreBounds">
            <summary>
            Gets the bounds of the "More" button
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanel.Pressed">
            <summary>
            Gets if the panel is currently on overflow and pressed
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanel.PopUp">
            <summary>
            Gets or sets the pop up where the panel is being drawn (if any)
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanel.SizeMode">
            <summary>
            Gets the current size mode of the panel
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanel.Items">
            <summary>
            Gets the collection of RibbonItem elements of this panel
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanel.Text">
            <summary>
            Gets or sets the text that is to be displayed on the bottom of the panel
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanel.Image">
            <summary>
            Gets or sets the image that is to be displayed on the panel when shown as an overflow button
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanel.OverflowMode">
            <summary>
            Gets if the panel is in overflow mode
            </summary>
            <remarks>Overflow mode is when the available space to draw the panel is not enough to draw components, so panel is drawn as a button that shows the full content of the panel in a pop-up window when clicked</remarks>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanel.Owner">
            <summary>
            Gets the Ribbon that contains this panel
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanel.Bounds">
            <summary>
            Gets the bounds of the panel relative to the Ribbon control
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanel.Selected">
            <summary>
            Gets a value indicating whether the panel is selected
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanel.IsFirstPanel">
            <summary>
            Gets a value indicating whether the panel is the first panel on the tab
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanel.IsLastPanel">
            <summary>
            Gets a value indicating whether the panel is the last panel on the tab
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanel.Index">
            <summary>
            Gets a value indicating what the index of the panel is in the Tabs panel collection
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanel.Tag">
            <summary>
            Gets or sets the object that contains data about the control
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanel.ContentBounds">
            <summary>
            Gets the bounds of the content of the panel
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanel.OwnerTab">
            <summary>
            Gets the RibbonTab that contains this panel
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanel.FlowsTo">
            <summary>
            Gets or sets the flow direction to layout items
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanel.PopupShowed">
            <summary>
            Gets or sets if the popup is currently showing
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.OnPaint(System.Object,System.Windows.Forms.RibbonElementPaintEventArgs)">
            <summary>
            Raises the paint event and draws the
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.SetBounds(System.Drawing.Rectangle)">
            <summary>
            Sets the bounds of the panel
            </summary>
            <param name="bounds"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.MeasureSize(System.Object,System.Windows.Forms.RibbonElementMeasureSizeEventArgs)">
            <summary>
            Measures the size of the panel on the mode specified by the event object
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.SetOwner(System.Windows.Forms.Ribbon)">
            <summary>
            Sets the value of the Owner Property
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.SetSelected(System.Boolean)">
            <summary>
            Sets the value of the Selected property
            </summary>
            <param name="selected">Value that indicates if the element is selected</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.OnResize(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.RibbonPanel.Resize"/> method
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.ShowOverflowPopup">
            <summary>
            Shows the panel in a popup
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.MeasureSizeFlowsToRight(System.Object,System.Windows.Forms.RibbonElementMeasureSizeEventArgs)">
            <summary>
            Measures the size when flow direction is to right
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.MeasureSizeFlowsToBottom(System.Object,System.Windows.Forms.RibbonElementMeasureSizeEventArgs)">
            <summary>
            Measures the size when flow direction is to bottom
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.SetSizeMode(System.Windows.Forms.RibbonElementSizeMode)">
            <summary>
            Sets the value of the SizeMode property
            </summary>
            <param name="sizeMode"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.SetContentBounds(System.Drawing.Rectangle)">
            <summary>
            Sets the value of the ContentBounds property
            </summary>
            <param name="contentBounds">Bounds of the content on the panel</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.SetOwnerTab(System.Windows.Forms.RibbonTab)">
            <summary>
            Sets the value of the OwnerTab property
            </summary>
            <param name="ownerTab">RibbonTab where this item is located</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.UpdateItemsRegions(System.Drawing.Graphics,System.Windows.Forms.RibbonElementSizeMode)">
            <summary>
            Updates the bounds of child elements
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.UpdateRegionsFlowsToBottom(System.Drawing.Graphics,System.Windows.Forms.RibbonElementSizeMode)">
            <summary>
            Updates the bounds of child elements when flow is to bottom
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.UpdateRegionsFlowsToLeft(System.Drawing.Graphics,System.Windows.Forms.RibbonElementSizeMode)">
            <summary>
            Updates the bounds of child elements when flow is to Left.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.UpdateRegionsFlowsToRight(System.Drawing.Graphics,System.Windows.Forms.RibbonElementSizeMode)">
            <summary>
            Updates the bounds of child elements when flow is to bottom
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.CenterItems">
            <summary>
            Centers the items on the tab conent
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.ToString">
            <summary>
            Overriden. Gives info about the panel as a string
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.SetPressed(System.Boolean)">
            <summary>
            Sets the value of the Pressed property
            </summary>
            <param name="pressed"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.SetMorePressed(System.Boolean)">
            <summary>
            Sets the value of the ButtonMorePressed property
            </summary>
            <param name="bounds">property value</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.SetMoreSelected(System.Boolean)">
            <summary>
            Sets the value of the ButtonMoreSelected property
            </summary>
            <param name="bounds">property value</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.SetMoreBounds(System.Drawing.Rectangle)">
            <summary>
            Sets the value of the ButtonMoreBounds property
            </summary>
            <param name="bounds">property value</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.OnButtonMoreClick(System.EventArgs)">
            <summary>
            Raised the <see cref="E:System.Windows.Forms.RibbonPanel.ButtonMoreClick"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.OnMouseEnter(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseEnter event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.OnMouseLeave(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseLeave event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.OnDoubleClick(System.EventArgs)">
            <summary>
            Raises the DoubleClick event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanel.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="T:System.Windows.Forms.RibbonPanelCollection">
            <summary>
            Represents a collection of RibbonPanel objects
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanelCollection.#ctor(System.Windows.Forms.RibbonTab)">
            <summary>
            Creates a new RibbonPanelCollection
            </summary>
            <param name="ownerTab">RibbonTab that contains this panel collection</param>
            <exception cref="T:System.ArgumentNullException">ownerTab is null</exception>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanelCollection.Owner">
            <summary>
            Gets the Ribbon that contains this panel collection
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanelCollection.OwnerTab">
            <summary>
            Gets the RibbonTab that contains this panel collection
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanelCollection.Add(System.Windows.Forms.RibbonPanel)">
            <summary>
            Adds the specified item to the collection
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanelCollection.AddRange(System.Collections.Generic.IEnumerable{System.Windows.Forms.RibbonPanel})">
            <summary>
            Adds a range of panels to the collection
            </summary>
            <param name="items">Panels to add</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanelCollection.Insert(System.Int32,System.Windows.Forms.RibbonPanel)">
            <summary>
            Inserts the specified panel at the desired index
            </summary>
            <param name="index">Desired index to insert the panel</param>
            <param name="item">Panel to insert</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanelCollection.SetOwner(System.Windows.Forms.Ribbon)">
            <summary>
            Sets the value of the Owner Property
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonPanelCollection.SetOwnerTab(System.Windows.Forms.RibbonTab)">
            <summary>
            Sets the value of the OwnerTab Property
            </summary>
            <param name="onwerTab"></param>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanelRenderEventArgs.Panel">
            <summary>
            Gets or sets the panel related to the events
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPanelRenderEventArgs.Canvas">
            <summary>
            Gets or sets the control where the panel is being rendered
            </summary>
        </member>
        <member name="E:System.Windows.Forms.RibbonPopup.Closed">
            <summary>
            Raised when the popup is closed
            </summary>
        </member>
        <member name="E:System.Windows.Forms.RibbonPopup.Closing">
            <summary>
            Raised when the popup is about to be closed
            </summary>
        </member>
        <member name="E:System.Windows.Forms.RibbonPopup.Opening">
            <summary>
            Raised when the Popup is about to be opened
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPopup.BorderRoundness">
            <summary>
            Gets or sets the roundness of the border
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPopup.WrappedDropDown">
            <summary>
            Gets the related ToolStripDropDown
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonPopup.Show(System.Drawing.Point)">
            <summary>
            Shows this Popup on the specified location of the screen
            </summary>
            <param name="screenLocation"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPopup.ToolStripDropDown_Opening(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Handles the Opening event of the ToolStripDropDown
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPopup.OnOpening(System.ComponentModel.CancelEventArgs)">
            <summary>
            Called when pop-up is being opened
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPopup.ToolStripDropDown_Closing(System.Object,System.Windows.Forms.ToolStripDropDownClosingEventArgs)">
            <summary>
            Handles the Closing event of the ToolStripDropDown
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPopup.ToolStripDropDown_Closed(System.Object,System.Windows.Forms.ToolStripDropDownClosedEventArgs)">
            <summary>
            Handles the closed event of the ToolStripDropDown
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPopup.Close">
            <summary>
            Closes this popup.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonPopup.OnClosing(System.Windows.Forms.ToolStripDropDownClosingEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.RibbonPopup.Closing"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPopup.OnClosed(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.RibbonPopup.Closed"/> event.
            <remarks>If you override this event don't forget to call base! Otherwise the popup will not be unregistered and hook will not work!</remarks>
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPopup.OnShowed(System.EventArgs)">
            <summary>
            Raises the Showed event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPopup.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="!:Paint"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:System.Windows.Forms.RibbonPopup.CreateParams">
            <summary>
            Overriden. Used to drop a shadow on the popup
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonPopupManager">
            <summary>
            Manages opened popups
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonPopupManager.DismissReason">
            <summary>
            Specifies reasons why pop-ups can be dismissed
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonPopupManager.DismissReason.ItemClicked">
            <summary>
            An item has been clicked
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonPopupManager.DismissReason.AppClicked">
            <summary>
            The app has been clicked
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonPopupManager.DismissReason.NewPopup">
            <summary>
            A new popup is showing and will hide sibling's popups
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonPopupManager.DismissReason.AppFocusChanged">
            <summary>
            The aplication window has been deactivated
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonPopupManager.DismissReason.EscapePressed">
            <summary>
            User has pressed escape on the keyboard
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonPopupManager.LastPopup">
            <summary>
            Gets the last pop-up of the collection
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonPopupManager.Register(System.Windows.Forms.RibbonPopup)">
            <summary>
            Registers a popup existance
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPopupManager.Unregister(System.Windows.Forms.RibbonPopup)">
            <summary>
            Unregisters a popup from existance
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPopupManager.FeedHookClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Feeds a click generated on the mouse hook
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPopupManager.FeedMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Feeds mouse Wheel. If applied on a IScrollableItem it's sended to it
            </summary>
            <param name="e"></param>
            <returns>True if handled. False otherwise</returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonPopupManager.DismissChildren(System.Windows.Forms.RibbonPopup,System.Windows.Forms.RibbonPopupManager.DismissReason)">
            <summary>
            Closes all children of specified pop-up
            </summary>
            <param name="parent">Pop-up of which children will be closed</param>
            <param name="reason">Reason for dismissing</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPopupManager.Dismiss(System.Windows.Forms.RibbonPopupManager.DismissReason)">
            <summary>
            Closes all currently registered pop-ups
            </summary>
            <param name="reason"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPopupManager.Dismiss(System.Windows.Forms.RibbonPopup,System.Windows.Forms.RibbonPopupManager.DismissReason)">
            <summary>
            Closes specified pop-up and all its descendants
            </summary>
            <param name="startPopup">Pop-up to close (and its descendants)</param>
            <param name="reason">Reason for closing</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonPopupManager.Dismiss(System.Int32,System.Windows.Forms.RibbonPopupManager.DismissReason)">
            <summary>
            Closes pop-up of the specified index and all its descendants
            </summary>
            <param name="startPopup">Index of the pop-up to close</param>
            <param name="reason">Reason for closing</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.RoundRectangle(System.Drawing.Rectangle,System.Int32)">
            <summary>
            Creates a rectangle with rounded corners
            </summary>
            <param name="r"></param>
            <param name="radius"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.RoundRectangle(System.Drawing.Rectangle,System.Int32,System.Windows.Forms.RibbonProfessionalRenderer.Corners)">
            <summary>
            Creates a rectangle with the specified corners rounded
            </summary>
            <param name="r"></param>
            <param name="radius"></param>
            <param name="corners"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.GradientRect(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Draws a rectangle with a vertical gradient
            </summary>
            <param name="g"></param>
            <param name="r"></param>
            <param name="northColor"></param>
            <param name="southColor"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawPressedShadow(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws a shadow that indicates that the element is pressed
            </summary>
            <param name="g"></param>
            <param name="r"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawArrow(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.RibbonArrowDirection)">
            <summary>
            Draws an arrow on the specified bounds
            </summary>
            <param name="g"></param>
            <param name="bounds"></param>
            <param name="c"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawArrowShaded(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.RibbonArrowDirection,System.Boolean)">
            <summary>
            Draws the pair of arrows that make a shadded arrow, centered on the specified bounds
            </summary>
            <param name="g"></param>
            <param name="b"></param>
            <param name="d"></param>
            <param name="enabled"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.CenterOn(System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Centers the specified rectangle on the specified container
            </summary>
            <param name="container"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawGripDot(System.Drawing.Graphics,System.Drawing.Point)">
            <summary>
            Draws a dot of the grip
            </summary>
            <param name="g"></param>
            <param name="location"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.CreateCompleteTabPath_2010(System.Windows.Forms.RibbonTab)">
            <summary>
            Creates the path of the tab and its contents
            </summary>
            <param name="tab"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.CreateTabPath_2010(System.Windows.Forms.RibbonTab)">
            <summary>
            Creates the path of the tab and its contents
            </summary>
            <param name="tab"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawCompleteTab(System.Windows.Forms.RibbonTabRenderEventArgs)">
            <summary>
            Draws a complete tab
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawTabNormal(System.Windows.Forms.RibbonTabRenderEventArgs)">
            <summary>
            Draws a complete tab
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawTabSelected(System.Windows.Forms.RibbonTabRenderEventArgs)">
            <summary>
            Draws a selected tab
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawTabPressed(System.Windows.Forms.RibbonTabRenderEventArgs)">
            <summary>
            Draws a pressed tab
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawTabActive(System.Windows.Forms.RibbonTabRenderEventArgs)">
            <summary>
            Draws an active tab
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawTabMinimized(System.Windows.Forms.RibbonTabRenderEventArgs)">
            <summary>
            Draws a selected tab
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawPanelNormal(System.Windows.Forms.RibbonPanelRenderEventArgs)">
            <summary>
            Draws a panel in normal state (unselected)
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawPanelSelected(System.Windows.Forms.RibbonPanelRenderEventArgs)">
            <summary>
            Draws a panel in selected state
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawPanelOverflowNormal(System.Windows.Forms.RibbonPanelRenderEventArgs)">
            <summary>
            Draws an overflown panel in normal state
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawPannelOveflowSelected(System.Windows.Forms.RibbonPanelRenderEventArgs)">
            <summary>
            Draws an overflown panel in selected state
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawPanelOverflowPressed(System.Windows.Forms.RibbonPanelRenderEventArgs)">
            <summary>
            Draws an overflown panel in pressed state
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawPanelOverflowImage(System.Windows.Forms.RibbonPanelRenderEventArgs)">
            <summary>
            Draws the image of the panel when collapsed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.ButtonCorners(System.Windows.Forms.RibbonButton)">
            <summary>
            Gets the corners to round on the specified button
            </summary>
            <param name="r"></param>
            <param name="button"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.ButtonFaceRounding(System.Windows.Forms.RibbonButton)">
            <summary>
            Determines buttonface corners
            </summary>
            <param name="button"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.ButtonDdRounding(System.Windows.Forms.RibbonButton)">
            <summary>
            Determines button's dropDown corners
            </summary>
            <param name="button"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawOrbOptionButton(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the orb's option buttons background
            </summary>
            <param name="g"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.RibbonProfessionalRenderer.Corners)">
            <summary>
            Draws a regular button in normal state 
            </summary>
            <param name="e"></param>
            <param name="button"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawButtonDropDownArrow(System.Drawing.Graphics,System.Windows.Forms.RibbonButton,System.Drawing.Rectangle)">
            <summary>
            Draws the arrow of buttons
            </summary>
            <param name="g"></param>
            <param name="button"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawButtonDisabled(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.RibbonProfessionalRenderer.Corners)">
            <summary>
            Draws a regular button in disabled state 
            </summary>
            <param name="e"></param>
            <param name="button"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawButtonPressed(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.RibbonProfessionalRenderer.Corners,System.Windows.Forms.Ribbon)">
            <summary>
            Draws a regular button in pressed state
            </summary>
            <param name="e"></param>
            <param name="button"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawButtonSelected(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.RibbonProfessionalRenderer.Corners,System.Windows.Forms.Ribbon)">
            <summary>
            Draws a regular buttton in selected state
            </summary>
            <param name="e"></param>
            <param name="button"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawButtonPressed(System.Drawing.Graphics,System.Windows.Forms.RibbonButton,System.Windows.Forms.Ribbon)">
            <summary>
            Draws the button as pressed
            </summary>
            <param name="g"></param>
            <param name="button"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawButtonChecked(System.Drawing.Graphics,System.Windows.Forms.RibbonButton)">
            <summary>
            Draws the button as Checked
            </summary>
            <param name="g"></param>
            <param name="button"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawButtonChecked(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.RibbonProfessionalRenderer.Corners)">
            <summary>
            Draws the button as checked
            </summary>
            <param name="g"></param>
            <param name="button"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawButtonSelected(System.Drawing.Graphics,System.Windows.Forms.RibbonButton,System.Windows.Forms.Ribbon)">
            <summary>
            Draws the button as a selected button
            </summary>
            <param name="g"></param>
            <param name="button"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawSplitButton(System.Windows.Forms.RibbonItemRenderEventArgs,System.Windows.Forms.RibbonButton)">
            <summary>
            Draws a SplitDropDown button in normal state
            </summary>
            <param name="e"></param>
            <param name="button"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawSplitButtonPressed(System.Windows.Forms.RibbonItemRenderEventArgs,System.Windows.Forms.RibbonButton)">
            <summary>
            Draws a SplitDropDown button in pressed state
            </summary>
            <param name="e"></param>
            <param name="button"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawSplitButtonSelected(System.Windows.Forms.RibbonItemRenderEventArgs,System.Windows.Forms.RibbonButton)">
            <summary>
            Draws a SplitDropDown button in selected state
            </summary>
            <param name="e"></param>
            <param name="button"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawSplitButtonDropDownPressed(System.Windows.Forms.RibbonItemRenderEventArgs,System.Windows.Forms.RibbonButton)">
            <summary>
            Draws a SplitDropDown button with the dropdown area pressed
            </summary>
            <param name="e"></param>
            <param name="button"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawSplitButtonDropDownSelected(System.Windows.Forms.RibbonItemRenderEventArgs,System.Windows.Forms.RibbonButton)">
            <summary>
            Draws a SplitDropDown button with the dropdown area selected
            </summary>
            <param name="e"></param>
            <param name="button"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawItemGroup(System.Windows.Forms.RibbonItemRenderEventArgs,System.Windows.Forms.RibbonItemGroup)">
            <summary>
            Draws the background of the specified  RibbonItemGroup
            </summary>
            <param name="e"></param>
            <param name="??"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawItemGroupBorder(System.Windows.Forms.RibbonItemRenderEventArgs,System.Windows.Forms.RibbonItemGroup)">
            <summary>
            Draws the background of the specified  RibbonItemGroup
            </summary>
            <param name="e"></param>
            <param name="??"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawTextBoxDisabled(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws a disabled textbox
            </summary>
            <param name="g"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawTextBoxUnselected(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws an unselected textbox
            </summary>
            <param name="g"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawTextBoxSelected(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws an unselected textbox
            </summary>
            <param name="g"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawOrb(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image,System.Boolean,System.Boolean)">
            <summary>
            Draws the orb on the specified state
            </summary>
            <param name="g">Device to draw</param>
            <param name="ribbon">Ribbon that the orb belongs to</param>
            <param name="r">Layout rectangle for the orb</param>
            <param name="selected">Specifies if the orb should be drawn as selected</param>
            <param name="pressed">Specifies if the orb should be drawn as pressed</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawOrbNormal(System.Windows.Forms.RibbonRenderEventArgs)">
            <summary>
            Draws the orb button in a normal state
            </summary>
            <param name="e"></param>
            <param name="button"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawOrbSelected(System.Windows.Forms.RibbonRenderEventArgs)">
            <summary>
            Draws the orb button in a selected state
            </summary>
            <param name="e"></param>
            <param name="button"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonProfessionalRenderer.DrawOrbPressed(System.Windows.Forms.RibbonRenderEventArgs)">
            <summary>
            Draws the orb button in pressed state
            </summary>
            <param name="e"></param>
            <param name="button"></param>
        </member>
        <member name="F:System.Windows.Forms.RibbonProfesionalRendererColorTable.Caption1">
            <summary>
            Caption bar is made of 4 rectangles height of each is indicated below
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonProfesionalRendererColorTable.OrbBackgroundDark">
            <summary>
            Orb colors in normal state
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonProfesionalRendererColorTable.OrbSelectedBackgroundDark">
            <summary>
            Orb colors in selected state
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonProfesionalRendererColorTable.OrbPressedBackgroundDark">
            <summary>
            Orb colors in pressed state
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonProfesionalRendererColorTable.OrbButtonText">
            <summary>
            2010 style Orb colors
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonProfesionalRendererColorTable.ButtonPressed_2013">
            <summary>
            2013 Colors
            Office 2013 White Theme
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonQuickAccessToolbar">
            <summary>
            Represents a quick access toolbar hosted on the Ribbon
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonQuickAccessToolbar.SuperBounds">
            <summary>
            Gets the bounds of the toolbar including the graphic adornments
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonQuickAccessToolbar.DropDownButton">
            <summary>
            Gets the dropdown button
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonQuickAccessToolbar.Padding">
            <summary>
            Gets or sets the padding (internal) of the toolbar
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonQuickAccessToolbar.Margin">
            <summary>
            Gets or sets the margin (external) of the toolbar
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonQuickAccessToolbar.MenuButtonVisible">
            <summary>
            Gets or sets a value indicating if the button that shows the menu of the 
            QuickAccess toolbar should be visible
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonQuickAccessToolbar.Items">
            <summary>
            Gets the Items of the QuickAccess toolbar.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonQuickAccessToolbarItemCollection.#ctor(System.Windows.Forms.RibbonQuickAccessToolbar)">
            <summary>
            Creates a new collection
            </summary>
            <param name="ownerGroup"></param>
        </member>
        <member name="P:System.Windows.Forms.RibbonQuickAccessToolbarItemCollection.OwnerToolbar">
            <summary>
            Gets the group that owns this item collection
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonQuickAccessToolbarItemCollection.Add(System.Windows.Forms.RibbonItem)">
            <summary>
            Adds the specified item to the collection
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonQuickAccessToolbarItemCollection.AddRange(System.Collections.Generic.IEnumerable{System.Windows.Forms.RibbonItem})">
            <summary>
            Adds the specified range of items
            </summary>
            <param name="items">Items to add</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonQuickAccessToolbarItemCollection.Insert(System.Int32,System.Windows.Forms.RibbonItem)">
            <summary>
            Inserts the specified item at the desired index
            </summary>
            <param name="index">Desired index of the item</param>
            <param name="item">Item to insert</param>
        </member>
        <member name="P:System.Windows.Forms.RibbonSeparator.DrawBackground">
            <summary>
            Gets or sets a value indicating if the separator should draw the divider lines
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonTab">
            <summary>
            Represents a tab that can contain RibbonPanel objects
            </summary>
        </member>
        <member name="E:System.Windows.Forms.RibbonTab.MouseEnter">
            <summary>
            Occurs when the mouse pointer enters the panel
            </summary>
        </member>
        <member name="E:System.Windows.Forms.RibbonTab.MouseLeave">
            <summary>
            Occurs when the mouse pointer leaves the panel
            </summary>
        </member>
        <member name="E:System.Windows.Forms.RibbonTab.MouseMove">
            <summary>
            Occurs when the mouse pointer is moved inside the panel
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.#ctor(System.Windows.Forms.Ribbon,System.String)">
            <summary>
            Creates a new RibbonTab
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTab.ScrollRightVisible">
            <summary>
            Gets if the right-side scroll button is currently visible
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTab.ScrollRightSelected">
            <summary>
            Gets if the right-side scroll button is currently selected
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTab.ScrollRightPressed">
            <summary>
            Gets if the right-side scroll button is currently pressed
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTab.ScrollRightBounds">
            <summary>
            Gets if the right-side scroll button bounds
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTab.ScrollLeftVisible">
            <summary>
            Gets if the left scroll button is currently visible
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTab.ScrollLeftBounds">
            <summary>
            Gets if the left scroll button bounds
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTab.ScrollLeftSelected">
            <summary>
            Gets if the left scroll button is currently selected
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTab.ScrollLeftPressed">
            <summary>
            Gets if the left scroll button is currently pressed
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTab.Bounds">
            <summary>
            Gets the <see cref="P:System.Windows.Forms.RibbonTab.TabBounds"/> property value
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTab.Panels">
            <summary>
            Gets the collection of panels that belong to this tab
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTab.TabBounds">
            <summary>
            Gets the bounds of the little tab showing the text
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTab.TabContentBounds">
            <summary>
            Gets the bounds of the tab content on the Ribbon
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTab.Owner">
            <summary>
            Gets the Ribbon that contains this tab
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTab.Pressed">
            <summary>
            Gets a value indicating whether the state of the tab is being pressed by the mouse or a key
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTab.Selected">
            <summary>
            Gets a value indicating whether the tab is selected
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTab.Active">
            <summary>
            Gets a value indicating if the tab is currently the active tab
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTab.Tag">
            <summary>
            Gets or sets the object that contains data about the control
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTab.Value">
            <summary>
            Gets or sets the custom string data associated with this control
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTab.Text">
            <summary>
            Gets or sets the text that is to be displayed on the tab
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTab.Contextual">
            <summary>
            Gets a value indicating whether the tab is attached to a  Context
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTab.Context">
            <summary>
            Gets or sets the context this tab belongs to
            </summary>
            <remarks>Tabs on a context are highlighted with a special glow color</remarks>
        </member>
        <member name="P:System.Windows.Forms.RibbonTab.Visible">
            <summary>
            Gets or sets the visibility of this tab
            </summary>
            <remarks>Tabs on a context are highlighted with a special glow color</remarks>
        </member>
        <member name="P:System.Windows.Forms.RibbonTab.ToolTipTitle">
            <summary>
            Gets or sets the tool tip title
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTab.ToolTipIcon">
            <summary>
            Gets or sets the image of the tool tip
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTab.ToolTip">
            <summary>
            Gets or sets the tool tip text
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTab.ToolTipImage">
            <summary>
            Gets or sets the tool tip image
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.SetBounds(System.Drawing.Rectangle)">
            <summary>
            This method is not relevant for this class
            </summary>
            <exception cref="T:System.NotSupportedException">Always</exception>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.SetContext(System.Windows.Forms.RibbonContext)">
            <summary>
            Sets the context of the tab
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.MeasureSize(System.Object,System.Windows.Forms.RibbonElementMeasureSizeEventArgs)">
            <summary>
            Measures the size of the tab. The tab content bounds is measured by the Ribbon control
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.SetOwner(System.Windows.Forms.Ribbon)">
            <summary>
            Sets the value of the Owner Property
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.SetPressed(System.Boolean)">
            <summary>
            Sets the value of the Pressed property
            </summary>
            <param name="pressed">Value that indicates if the element is pressed</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.SetSelected(System.Boolean)">
            <summary>
            Sets the value of the Selected property
            </summary>
            <param name="selected">Value that indicates if the element is selected</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.OnScrollRightVisibleChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.RibbonTab.ScrollRightVisibleChanged"/> event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.OnScrollRightPressedChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.RibbonTab.ScrollRightPressedChanged"/> event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.OnScrollRightBoundsChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.RibbonTab.ScrollRightBoundsChanged"/> event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.OnScrollRightSelectedChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.RibbonTab.ScrollRightSelectedChanged"/> event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.OnScrollLeftVisibleChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.RibbonTab.ScrollLeftVisibleChanged"/> event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.OnScrollLeftPressedChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.RibbonTab.ScrollLeftPressedChanged"/> event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.OnScrollLeftBoundsChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.RibbonTab.ScrollLeftBoundsChanged"/> event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.OnScrollLeftSelectedChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.RibbonTab.ScrollLeftSelectedChanged"/> event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.SetActive(System.Boolean)">
            <summary>
            Sets the tab as active without sending the message to the Ribbon
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.SetTabBounds(System.Drawing.Rectangle)">
            <summary>
            Sets the value of the TabBounds property
            </summary>
            <param name="tabBounds">Rectangle representing the bounds of the tab</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.SetTabContentBounds(System.Drawing.Rectangle)">
            <summary>
            Sets the value of the TabContentBounds
            </summary>
            <param name="tabContentBounds">Rectangle representing the bounds of the tab's content</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.GetLargerPanel(System.Windows.Forms.RibbonElementSizeMode)">
            <summary>
            Gets the panel with the larger width and the specified size mode
            </summary>
            <param name="size">Size mode of panel to search</param>
            <returns>Larger panel. Null if none of the specified size mode</returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.GetLargerPanel">
            <summary>
            Gets the panel with a larger size
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.UpdatePanelsRegions">
            <summary>
            Updates the regions of the panels and its contents
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.UpdateScrollBounds">
            <summary>
            Updates the bounds of the scroll bounds
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.ToString">
            <summary>
            Overriden. Returns a string representation of the tab
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.OnMouseEnter(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseEnter event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.OnMouseLeave(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseLeave event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.SetScrollLeftPressed(System.Boolean)">
            <summary>
            Sets the value of the <see cref="P:System.Windows.Forms.RibbonTab.ScrollLeftPressed"/>
            </summary>
            <param name="pressed"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.SetScrollLeftSelected(System.Boolean)">
            <summary>
            Sets the value of the <see cref="P:System.Windows.Forms.RibbonTab.ScrollLeftSelected"/>
            </summary>
            <param name="selected"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.SetScrollRightPressed(System.Boolean)">
            <summary>
            Sets the value of the <see cref="P:System.Windows.Forms.RibbonTab.ScrollRightPressed"/>
            </summary>
            <param name="pressed"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.SetScrollRightSelected(System.Boolean)">
            <summary>
            Sets the value of the <see cref="P:System.Windows.Forms.RibbonTab.ScrollRightSelected"/>
            </summary>
            <param name="selected"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.ScrollLeft">
            <summary>
            Presses the lef-scroll button
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonTab.ScrollRight">
            <summary>
            Presses the left-scroll button
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonTabCollection">
            <summary>
            Represents a collection of RibbonTab objects
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonTabCollection.#ctor(System.Windows.Forms.Ribbon)">
            <summary>
            Creates a new RibbonTabCollection
            </summary>
            <param name="owner">|</param>
            <exception cref="!:AgrumentNullException">owner is null</exception>
        </member>
        <member name="P:System.Windows.Forms.RibbonTabCollection.Owner">
            <summary>
            Gets the Ribbon that owns this tab
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonTabCollection.Add(System.Windows.Forms.RibbonTab)">
            <summary>
            Adds the specified item to the collection
            </summary>
            <param name="item">Item to add to the collection</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTabCollection.AddRange(System.Collections.Generic.IEnumerable{System.Windows.Forms.RibbonTab})">
            <summary>
            Adds the specified items to the collection
            </summary>
            <param name="items">Items to add to the collection</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTabCollection.Insert(System.Int32,System.Windows.Forms.RibbonTab)">
            <summary>
            Inserts the specified item into the specified index
            </summary>
            <param name="index">Desired index of the item into the collection</param>
            <param name="item">Tab to be inserted</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTabCollection.SetOwner(System.Windows.Forms.Ribbon)">
            <summary>
            Sets the value of the Owner Property
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonContext">
            <summary>
            Represents a context on the Ribbon
            </summary>
            <remarks>Contexts are useful when some tabs are volatile, depending on some selection. A RibbonTabContext can be added to the ribbon by calling Ribbon.Contexts.Add</remarks>
        </member>
        <member name="M:System.Windows.Forms.RibbonContext.#ctor(System.Windows.Forms.Ribbon)">
            <summary>
            Creates a new RibbonTabContext
            </summary>
            <param name="Ribbon">Ribbon that owns the context</param>
        </member>
        <member name="P:System.Windows.Forms.RibbonContext.Text">
            <summary>
            Gets or sets the text of the Context
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonContext.GlowColor">
            <summary>
            Gets or sets the color of the glow that indicates a context
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonContext.Owner">
            <summary>
            Gets the Ribbon that owns this context
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonContext.SetOwner(System.Windows.Forms.Ribbon)">
            <summary>
            Sets the value of the Owner Property
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonContextCollection">
            <summary>
            Represents a collection of RibbonTabContext
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonContextCollection.#ctor(System.Windows.Forms.Ribbon)">
            <summary>
            Creates a new RibbonTabContext Collection
            </summary>
            <param name="owner">Ribbon that owns this collection</param>
            <exception cref="T:System.ArgumentNullException">owner is null</exception>
        </member>
        <member name="P:System.Windows.Forms.RibbonContextCollection.Owner">
            <summary>
            Gets the Ribbon that owns this collection
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonContextCollection.Add(System.Windows.Forms.RibbonContext)">
            <summary>
            Adds the specified context to the collection
            </summary>
            <param name="item">Item to add to the collection</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonContextCollection.AddRange(System.Collections.Generic.IEnumerable{System.Windows.Forms.RibbonContext})">
            <summary>
            Adds the specified contexts to the collection
            </summary>
            <param name="items">Items to add to the collection</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonContextCollection.Insert(System.Int32,System.Windows.Forms.RibbonContext)">
            <summary>
            Inserts the specified context into the specified index
            </summary>
            <param name="index">Desired index of the item into the collection</param>
            <param name="item">Tab to be inserted</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonContextCollection.SetOwner(System.Windows.Forms.Ribbon)">
            <summary>
            Sets the value of the Owner Property
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTabRenderEventArgs.Tab">
            <summary>
            Gets or sets the RibbonTab related to the evennt
            </summary>
        </member>
        <member name="E:System.Windows.Forms.RibbonTextBox.TextBoxTextChanged">
            <summary>
            Raised when the <see cref="P:System.Windows.Forms.RibbonTextBox.TextBoxText"/> property value has changed
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTextBox.AllowTextEdit">
            <summary>
            Gets or sets if the textbox allows editing
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTextBox.TextBoxText">
            <summary>
            Gets or sets the text on the textbox
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTextBox.TextBoxTextBounds">
            <summary>
            Gets the bounds of the text on the textbox
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTextBox.ImageBounds">
            <summary>
            Gets the bounds of the image
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTextBox.LabelBounds">
            <summary>
            Gets the bounds of the label that is shown next to the textbox
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTextBox.ImageVisible">
            <summary>
            Gets a value indicating if the image is currenlty visible
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTextBox.LabelVisible">
            <summary>
            Gets a value indicating if the label is currently visible
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTextBox.TextBoxBounds">
            <summary>
            Gets the bounds of the text
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTextBox.Editing">
            <summary>
            Gets a value indicating if user is currently editing the text of the textbox
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTextBox.TextBoxWidth">
            <summary>
            Gets or sets the width of the textbox
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTextBox.LabelWidth">
            <summary>
            Gets or sets the width of the Label. Enter zero to auto size based on contents.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonTextBox.StartEdit">
            <summary>
            Starts editing the text and focuses the TextBox
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonTextBox.EndEdit">
            <summary>
            Ends the editing of the textbox
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonTextBox.PlaceActualTextBox">
            <summary>
            Places the Actual TextBox on the owner so user can edit the text
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonTextBox.RemoveActualTextBox">
            <summary>
            Removes the actual TextBox that edits the text
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonTextBox.InitTextBox(System.Windows.Forms.TextBox)">
            <summary>
            Initializes the texbox that edits the text
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTextBox._actualTextbox_LostFocus(System.Object,System.EventArgs)">
            <summary>
            Handles the LostFocus event of the actual TextBox
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTextBox._actualTextbox_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the KeyDown event of the actual TextBox
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTextBox._actualTextbox_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Handles the KeyPress event of the actual TextBox
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTextBox._actualTextbox_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Handles the Validating event of the actual TextBox
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTextBox._actualTextbox_Validated(System.Object,System.EventArgs)">
            <summary>
            Handles the Validated event of the actual TextBox
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTextBox._actualTextbox_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the TextChanged event of the actual TextBox
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonTextBox.MeasureHeight">
            <summary>
            Measures the suposed height of the textobx
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonTextBox.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.RibbonTextBox.TextBoxTextChanged"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:System.Windows.Forms.RibbonRenderer">
            <summary>
            Provides render functionallity for the Ribbon control
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:System.Windows.Forms.RibbonRenderer.DisabledImageColorMatrix">
            <summary>
            Gets the disabled image color matrix
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonRenderer.MultiplyColorMatrix(System.Single[][],System.Single[][])">
            <summary>
            Multiplies the color matrix (Extracted from .NET Framework
            </summary>
            <param name="matrix1"></param>
            <param name="matrix2"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonRenderer.CreateDisabledImage(System.Drawing.Image)">
            <summary>
            Creates the disabled image for the specified Image
            </summary>
            <param name="normalImage"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonRenderer.OnRenderOrbDropDownBackground(System.Windows.Forms.RibbonOrbDropDownEventArgs)">
            <summary>
            Renders the Ribbon Orb's DropDown background
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonRenderer.OnRenderRibbonCaptionBar(System.Windows.Forms.RibbonRenderEventArgs)">
            <summary>
            Renders the Ribbon's caption bar
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonRenderer.OnRenderRibbonOrb(System.Windows.Forms.RibbonRenderEventArgs)">
            <summary>
            Renders the orb of the ribbon
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonRenderer.OnRenderRibbonQuickAccessToolbarBackground(System.Windows.Forms.RibbonRenderEventArgs)">
            <summary>
            Renders the background of the QuickAccess toolbar
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonRenderer.OnRenderRibbonBackground(System.Windows.Forms.RibbonRenderEventArgs)">
            <summary>
            Renders the Ribbon's background
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonRenderer.OnRenderRibbonTab(System.Windows.Forms.RibbonTabRenderEventArgs)">
            <summary>
            Renders a RibbonTab
            </summary>
            <param name="e">Event data and paint tools</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonRenderer.OnRenderRibbonItem(System.Windows.Forms.RibbonItemRenderEventArgs)">
            <summary>
            Renders a RibbonItem
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonRenderer.OnRenderRibbonTabContentBackground(System.Windows.Forms.RibbonTabRenderEventArgs)">
            <summary>
            Renders the background of the content of the specified tab
            </summary>
            <param name="e">Event data and paint tools</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonRenderer.OnRenderRibbonPanelBackground(System.Windows.Forms.RibbonPanelRenderEventArgs)">
            <summary>
            Renders the background of the specified ribbon panel
            </summary>
            <param name="e">Event data and paint tools</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonRenderer.OnRenderRibbonTabText(System.Windows.Forms.RibbonTabRenderEventArgs)">
            <summary>
            Renders the text of the tab specified on the event
            </summary>
            <param name="e">Event data and paint tools</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonRenderer.OnRenderRibbonItemText(System.Windows.Forms.RibbonTextEventArgs)">
            <summary>
            Renders the text of the item specified on the event
            </summary>
            <param name="e">Event data and paint tools</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonRenderer.OnRenderRibbonItemBorder(System.Windows.Forms.RibbonItemRenderEventArgs)">
            <summary>
            Renders the border of the item, after the text and image of the item
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonRenderer.OnRenderRibbonItemImage(System.Windows.Forms.RibbonItemBoundsEventArgs)">
            <summary>
            Renders the image of the item specified on the event
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonRenderer.OnRenderRibbonPanelText(System.Windows.Forms.RibbonPanelRenderEventArgs)">
            <summary>
            Renders the text of the specified panel
            </summary>
            <param name="e">Event data and paint tools</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonRenderer.OnRenderDropDownBackground(System.Windows.Forms.RibbonCanvasEventArgs)">
            <summary>
            Renders the background of a dropdown
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonRenderer.OnRenderPanelPopupBackground(System.Windows.Forms.RibbonCanvasEventArgs)">
            <summary>
            Renders the background of a panel background
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonRenderer.OnRenderTabScrollButtons(System.Windows.Forms.RibbonTabRenderEventArgs)">
            <summary>
            Call to draw the scroll buttons on the tab
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonRenderer.OnRenderScrollbar(System.Drawing.Graphics,System.Windows.Forms.Control,System.Windows.Forms.Ribbon)">
            <summary>
            Call to draw the scrollbar on the Control
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonRenderer.OnRenderToolTipBackground(System.Windows.Forms.RibbonToolTipRenderEventArgs)">
            <summary>
            Call to draw the Tooltip
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonRenderer.OnRenderToolTipText(System.Windows.Forms.RibbonToolTipRenderEventArgs)">
            <summary>
            Renders the text of the Tooltip specified on the event
            </summary>
            <param name="e">Event data and paint tools</param>
        </member>
        <member name="T:System.Windows.Forms.RibbonRenderEventArgs">
            <remarks>Ribbon rendering event data</remarks>
        </member>
        <member name="P:System.Windows.Forms.RibbonRenderEventArgs.Ribbon">
            <summary>
            Gets the Ribbon related to the render
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonRenderEventArgs.Graphics">
            <summary>
            Gets the Device to draw into
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonRenderEventArgs.ClipRectangle">
            <summary>
            Gets the Rectangle area where to draw into
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItemGroup.Checked">
            <summary>
            This property is not relevant for this class
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItemGroup.DrawBackground">
            <summary>
            Gets or sets a value indicating if the group should
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItemGroup.FirstItem">
            <summary>
            Gets the first item of the group
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItemGroup.LastItem">
            <summary>
            Gets the last item of the group
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonItemGroup.Items">
            <summary>
            Gets the collection of items of this group
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemGroup.SetOwnerPanel(System.Windows.Forms.RibbonPanel)">
            <param name="ownerPanel">RibbonPanel where this item is located</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemGroup.SetOwner(System.Windows.Forms.Ribbon)">
            <param name="owner">Ribbon that owns this item</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonItemGroup.SetOwnerTab(System.Windows.Forms.RibbonTab)">
            <param name="ownerTab">RibbonTab where this item is located</param>
        </member>
        <member name="P:System.Windows.Forms.RibbonTextEventArgs.Color">
            <summary>
            Gets or sets the color of the text to render
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTextEventArgs.Text">
            <summary>
            Gets or sets the text to render
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTextEventArgs.Format">
            <summary>
            Gets or sets the format of the text
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonTextEventArgs.Style">
            <summary>
            Gets or sets the font style of the text
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonToolTip">
            <summary>
            CustomizedToolTip to create tooltips with Image.
            </summary>
        </member>
        <member name="E:System.Windows.Forms.RibbonToolTip.Popup">
            <summary>
            New Popup Eventhandler. Is handled before <see cref="E:System.Windows.Forms.ToolTip.Popup"/>.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonToolTip.OwnerDraw">
            <summary>
            Gets or sets a value indicating whether the ToolTip is drawn by the operating
            system or by code that you provide.
            If true, the properties 'ToolTipIcon' and 'ToolTipTitle' will set to their default values
            and the image will display in ToolTip otherwise only text will display.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonToolTip.ToolTipIcon">
            <summary>
            Gets or sets a value that defines the type of icon to be displayed alongside
            the ToolTip text.
            Cannot set if the property 'OwnerDraw' is true.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonToolTip.ToolTipTitle">
            <summary>
            Gets or sets a title for the ToolTip window.
            Cannot set if the property 'OwnerDraw' is true.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonToolTip.ToolTipImage">
            <summary>
            Gets or sets the image for the ToolTip window.
            Cannot set if the property 'OwnerDraw' is true.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonToolTip.BackColor">
            <summary>
            Gets or sets the background color for the ToolTip.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonToolTip.ForeColor">
            <summary>
            Gets or sets the foreground color for the ToolTip.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonToolTip.AutoSize">
            <summary>
            Gets or sets a value that indicates whether the ToolTip resizes based on its text.
            true if the ToolTip automatically resizes based on its text; otherwise, false. The default is true.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonToolTip.Size">
            <summary>
            Gets or sets the size of the ToolTip.
            Valid only if the Property 'AutoSize' is false.
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonToolTip.BorderColor">
            <summary>
            Gets or sets the border color for the ToolTip.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonToolTip.#ctor(System.Windows.Forms.IRibbonElement)">
            <summary>
            Constructor to create instance of RibbonToolTip.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonToolTip.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonToolTip.ToolTip_Draw(System.Object,System.Windows.Forms.DrawToolTipEventArgs)">
            <summary>
            CustomizedToolTip_Draw raised when tooltip is drawn.
            </summary>
            <param name="sender">sender</param>
            <param name="e">e</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonToolTip.ToolTip_Popup(System.Object,System.Windows.Forms.PopupEventArgs)">
            <summary>
            CustomizedToolTip_Popup raised when tooltip pops up.
            </summary>
            <param name="sender">sender</param>
            <param name="e">e</param>
        </member>
        <member name="P:System.Windows.Forms.RibbonToolTipRenderEventArgs.Text">
            <summary>
            Gets the Text
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonToolTipRenderEventArgs.Color">
            <summary>
            Gets or sets the color of the text to render
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonToolTipRenderEventArgs.Format">
            <summary>
            Gets or sets the format of the text
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonToolTipRenderEventArgs.Style">
            <summary>
            Gets or sets the font style of the text
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonToolTipRenderEventArgs.Font">
            <summary>
            Gets or sets the font
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonToolTipRenderEventArgs.TipImage">
            <summary>
            Gets or sets the tip image
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonUpDown.MeasureHeight">
            <summary>
            Measures the suposed height of the textbox
            </summary>
            <returns></returns>
        </member>
        <member name="P:System.Windows.Forms.RibbonUpDown.UpButtonPressed">
            <summary>
            Gets a value indicating if the Up button is currently pressed
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonUpDown.DownButtonPressed">
            <summary>
            Gets a value indicating if the Down button is currently pressed
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonUpDown.UpButtonSelected">
            <summary>
            Gets a value indicating if the Up button is currently selected
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonUpDown.DownButtonSelected">
            <summary>
            Gets a value indicating if the Down button is currently selected
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonUpDown.UpButtonBounds">
            <summary>
            Gets or sets the bounds of the DropDown button
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonUpDown.DownButtonBounds">
            <summary>
            Gets or sets the bounds of the DropDown button
            </summary>
        </member>
        <member name="T:System.Windows.Forms.Set`1">
            <summary>
            There is no HashSet&lt;T&gt; available in .net 2.0.
            </summary>
            <typeparam name="T">Der Typ des Sets</typeparam>
        </member>
        <member name="T:System.Windows.Forms.RibbonHelpers.WinApi">
            <summary>
            Provides Windows Operative System specific functionallity.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonHelpers.WinApi.CS_DROPSHADOW">
            <summary>
            Enables the drop shadow effect on a window
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonHelpers.WinApi.WH_MOUSE_LL">
            <summary>
            Windows NT/2000/XP: Installs a hook procedure that monitors low-level mouse input events.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonHelpers.WinApi.WH_KEYBOARD_LL">
            <summary>
            Windows NT/2000/XP: Installs a hook procedure that monitors low-level keyboard  input events.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonHelpers.WinApi.WH_MOUSE">
            <summary>
            Installs a hook procedure that monitors mouse messages.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonHelpers.WinApi.WH_KEYBOARD">
            <summary>
            Installs a hook procedure that monitors keystroke messages.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonHelpers.WinApi.WM_NCLBUTTONDOWN">
            <summary>
            The WM_NCLBUTTONDOWN message is posted when the user presses the left mouse button while the cursor is within the nonclient area of a window. 
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonHelpers.WinApi.WM_NCLBUTTONUP">
            <summary>
            The WM_NCLBUTTONUP message is posted when the user releases the left mouse button while the cursor is within the nonclient area of a window. 
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonHelpers.WinApi.WM_SIZE">
            <summary>
            The WM_SIZE message is sent to a window after its size has changed.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonHelpers.WinApi.WM_ERASEBKGND">
            <summary>
            The WM_ERASEBKGND message is sent when the window background must be erased (for example, when a window is resized).
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonHelpers.WinApi.WM_NCCALCSIZE">
            <summary>
            The WM_NCCALCSIZE message is sent when the size and position of a window's client area must be calculated.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonHelpers.WinApi.WM_NCHITTEST">
            <summary>
            The WM_NCHITTEST message is sent to a window when the cursor moves, or when a mouse button is pressed or released.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonHelpers.WinApi.WM_NCMOUSEMOVE">
            <summary>
            The WM_NCMOUSEMOVE message is posted to a window when the cursor is moved within the nonclient area of the window. 
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonHelpers.WinApi.WM_NCMOUSELEAVE">
            <summary>
            The WM_NCMOUSELEAVE message is posted to a window when the cursor leaves the nonclient area of the window specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonHelpers.WinApi.SC_RESTORE">
            <summary>
            wParam of WM_SYSCOMMAND.
            SC_RESTORE: Restores the window to its normal position and size.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonHelpers.WinApi.BI_RGB">
            <summary>
            An uncompressed format.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonHelpers.WinApi.DIB_RGB_COLORS">
            <summary>
            The BITMAPINFO structure contains an array of literal RGB values.
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonHelpers.WinApi.SRCCOPY">
            <summary>
            Copies the source rectangle directly to the destination rectangle.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.ToAscii(System.Int32,System.Int32,System.Byte[],System.Byte[],System.Int32)">
            <summary>
            The ToAscii function translates the specified virtual-key code and keyboard state to the corresponding character or characters.
            </summary>
            <param name="uVirtKey"></param>
            <param name="uScanCode"></param>
            <param name="lpbKeyState"></param>
            <param name="lpwTransKey"></param>
            <param name="fuState"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.GetKeyboardState(System.Byte[])">
            <summary>
            The GetKeyboardState function copies the status of the 256 virtual keys to the specified buffer.
            </summary>
            <param name="pbKeyState"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.GetKeyState(System.Int32)">
            <summary>
            This function retrieves the status of the specified virtual key. The status specifies whether the key is up, down, or toggled on or off — alternating each time the key is pressed. 
            </summary>
            <param name="vKey"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.SetWindowsHookEx(System.Int32,System.Windows.Forms.RibbonHelpers.GlobalHook.HookProcCallBack,System.IntPtr,System.Int32)">
            <summary>
            Installs an application-defined hook procedure into a hook chain
            </summary>
            <param name="idHook"></param>
            <param name="lpfn"></param>
            <param name="hInstance"></param>
            <param name="threadId"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.UnhookWindowsHookEx(System.Int32)">
            <summary>
            Removes a hook procedure installed in a hook chain by the SetWindowsHookEx function. 
            </summary>
            <param name="idHook"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.CallNextHookEx(System.Int32,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Passes the hook information to the next hook procedure in the current hook chain
            </summary>
            <param name="idHook"></param>
            <param name="nCode"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.GetDC(System.IntPtr)">
            <summary>
            This function retrieves a handle to a display device context (DC) for the client area of the specified window.
            </summary>
            <param name="hdc"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.SaveDC(System.IntPtr)">
            <summary>
            The SaveDC function saves the current state of the specified device context (DC) by copying data describing selected objects and graphic modes
            </summary>
            <param name="hdc"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.ReleaseDC(System.IntPtr,System.Int32)">
            <summary>
            This function releases a device context (DC), freeing it for use by other applications. The effect of ReleaseDC depends on the type of device context.
            </summary>
            <param name="hdc"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.DrawThemeTextEx(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Windows.Forms.RibbonHelpers.WinApi.RECT@,System.Windows.Forms.RibbonHelpers.WinApi.DTTOPTS@)">
            <summary>
            Draws text using the color and font defined by the visual style. Extends DrawThemeText by allowing additional text format options.
            </summary>
            <param name="hTheme"></param>
            <param name="hdc"></param>
            <param name="iPartId"></param>
            <param name="iStateId"></param>
            <param name="text"></param>
            <param name="iCharCount"></param>
            <param name="dwFlags"></param>
            <param name="pRect"></param>
            <param name="pOptions"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.DrawThemeText(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Windows.Forms.RibbonHelpers.WinApi.RECT@)">
            <summary>
            Draws text using the color and font defined by the visual style.
            </summary>
            <param name="hTheme"></param>
            <param name="hdc"></param>
            <param name="iPartId"></param>
            <param name="iStateId"></param>
            <param name="text"></param>
            <param name="iCharCount"></param>
            <param name="dwFlags1"></param>
            <param name="dwFlags2"></param>
            <param name="pRect"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.CreateDIBSection(System.IntPtr,System.Windows.Forms.RibbonHelpers.WinApi.BITMAPINFO@,System.UInt32,System.Int32,System.IntPtr,System.UInt32)">
            <summary>
            The CreateDIBSection function creates a DIB that applications can write to directly.
            </summary>
            <param name="hdc"></param>
            <param name="pbmi"></param>
            <param name="iUsage"></param>
            <param name="ppvBits"></param>
            <param name="hSection"></param>
            <param name="dwOffset"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.BitBlt(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,System.UInt32)">
            <summary>
            This function transfers pixels from a specified source rectangle to a specified destination rectangle, altering the pixels according to the selected raster operation (ROP) code.
            </summary>
            <param name="hdc"></param>
            <param name="nXDest"></param>
            <param name="nYDest"></param>
            <param name="nWidth"></param>
            <param name="nHeight"></param>
            <param name="hdcSrc"></param>
            <param name="nXSrc"></param>
            <param name="nYSrc"></param>
            <param name="dwRop"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.CreateCompatibleDC(System.IntPtr)">
            <summary>
            This function creates a memory device context (DC) compatible with the specified device.
            </summary>
            <param name="hDC"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.SelectObject(System.IntPtr,System.IntPtr)">
            <summary>
            This function selects an object into a specified device context. The new object replaces the previous object of the same type.
            </summary>
            <param name="hDC"></param>
            <param name="hObject"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.DeleteObject(System.IntPtr)">
            <summary>
            The DeleteObject function deletes a logical pen, brush, font, bitmap, region, or palette, freeing all system resources associated with the object. After the object is deleted, the specified handle is no longer valid.
            </summary>
            <param name="hObject"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.DeleteDC(System.IntPtr)">
            <summary>
            The DeleteDC function deletes the specified device context (DC).
            </summary>
            <param name="hdc"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.DwmExtendFrameIntoClientArea(System.IntPtr,System.Windows.Forms.RibbonHelpers.WinApi.MARGINS@)">
            <summary>
            Extends the window frame behind the client area.
            </summary>
            <param name="hdc"></param>
            <param name="marInset"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.DwmDefWindowProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.IntPtr@)">
            <summary>
            Default window procedure for Desktop Window Manager (DWM) hit-testing within the non-client area.
            </summary>
            <param name="hwnd"></param>
            <param name="msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.DwmIsCompositionEnabled(System.Int32@)">
            <summary>
            Obtains a value that indicates whether Desktop Window Manager (DWM) composition is enabled.
            </summary>
            <param name="pfEnabled"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.SendMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Sends the specified message to a window or windows
            </summary>
            <param name="hWnd"></param>
            <param name="Msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.PostMessage(System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sends the specified message to a window or windows
            </summary>
            <param name="hWnd">handle to destination window</param>
            <param name="Msg">message</param>
            <param name="wParam">first message parameter</param>
            <param name="lParam">second message parameter</param>
            <returns>none</returns>
        </member>
        <member name="T:System.Windows.Forms.RibbonHelpers.WinApi.MouseLLHookStruct">
            <summary>
            Contains information about a mouse event passed to a WH_MOUSE hook procedure
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonHelpers.WinApi.KeyboardLLHookStruct">
            <summary>
            Contains information about a low-level keyboard input event.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonHelpers.WinApi.MouseHookStruct">
            <summary>
            Contains information about a mouse event passed to a WH_MOUSE hook procedure
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonHelpers.WinApi.POINT">
            <summary>
            Represents a point
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonHelpers.WinApi.DTTOPTS">
            <summary>
            Defines the options for the DrawThemeTextEx function.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonHelpers.WinApi.RGBQUAD">
            <summary>
            This structure describes a color consisting of relative intensities of red, green, and blue.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonHelpers.WinApi.BITMAPINFOHEADER">
            <summary>
            This structure contains information about the dimensions and color format of a device-independent bitmap (DIB).
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonHelpers.WinApi.BITMAPINFO">
            <summary>
            This structure defines the dimensions and color information of a Windows-based device-independent bitmap (DIB).
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonHelpers.WinApi.RECT">
            <summary>
            Describes the width, height, and location of a rectangle.
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonHelpers.WinApi.NCCALCSIZE_PARAMS">
            <summary>
            The NCCALCSIZE_PARAMS structure contains information that an application can use 
            while processing the WM_NCCALCSIZE message to calculate the size, position, and 
            valid contents of the client area of a window. 
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonHelpers.WinApi.MARGINS">
            <summary>
            Used to specify margins of a window
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonHelpers.WinApi.IsWindows">
            <summary>
            Gets if the current OS is Windows NT or later
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonHelpers.WinApi.IsVista">
            <summary>
            Gets a value indicating if operating system is vista or higher
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonHelpers.WinApi.IsXP">
            <summary>
            Gets a value indicating if operating system is xp or higher
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonHelpers.WinApi.IsGlassEnabled">
            <summary>
            Gets if computer is glass capable and enabled
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.InvalidateNC(System.IntPtr)">
            <summary>
            Invalidates non-client area
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.HiWord(System.Int32)">
            <summary>
            Equivalent to the HiWord C Macro
            </summary>
            <param name="dwValue"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.LoWord(System.Int32)">
            <summary>
            Equivalent to the LoWord C Macro
            </summary>
            <param name="dwValue"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.MakeLParam(System.Int32,System.Int32)">
            <summary>
            Equivalent to the MakeLParam C Macro
            </summary>
            <param name="LoWord"></param>
            <param name="HiWord"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.FillForGlass(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Fills an area for glass rendering
            </summary>
            <param name="gph"></param>
            <param name="rgn"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.WinApi.DrawTextOnGlass(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Draws theme text on glass.
            </summary>
            <param name="hwnd"></param>
            <param name="text"></param>
            <param name="font"></param>
            <param name="bounds"></param>
            <param name="glowSize"></param>
            <remarks>This method is courtesy of 版权所有 (I hope the name's right)</remarks>
        </member>
        <member name="T:System.Windows.Forms.RibbonHelpers.GlobalHook.HookTypes">
            <summary>
            Types of available hooks
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonHelpers.GlobalHook.HookTypes.Mouse">
            <summary>
            Installs a mouse hook
            </summary>
        </member>
        <member name="F:System.Windows.Forms.RibbonHelpers.GlobalHook.HookTypes.Keyboard">
            <summary>
            Installs a keyboard hook
            </summary>
        </member>
        <member name="E:System.Windows.Forms.RibbonHelpers.GlobalHook.MouseClick">
            <summary>
            Occours when the hook captures a mouse click
            </summary>
        </member>
        <member name="E:System.Windows.Forms.RibbonHelpers.GlobalHook.MouseDoubleClick">
            <summary>
            Occours when the hook captures a mouse double click
            </summary>
        </member>
        <member name="E:System.Windows.Forms.RibbonHelpers.GlobalHook.MouseWheel">
            <summary>
            Occours when the hook captures the mouse wheel
            </summary>
        </member>
        <member name="E:System.Windows.Forms.RibbonHelpers.GlobalHook.MouseDown">
            <summary>
            Occours when the hook captures the press of a mouse button
            </summary>
        </member>
        <member name="E:System.Windows.Forms.RibbonHelpers.GlobalHook.MouseUp">
            <summary>
            Occours when the hook captures the release of a mouse button
            </summary>
        </member>
        <member name="E:System.Windows.Forms.RibbonHelpers.GlobalHook.MouseMove">
            <summary>
            Occours when the hook captures the mouse moving over the screen
            </summary>
        </member>
        <member name="E:System.Windows.Forms.RibbonHelpers.GlobalHook.KeyDown">
            <summary>
            Occours when a key is pressed
            </summary>
        </member>
        <member name="E:System.Windows.Forms.RibbonHelpers.GlobalHook.KeyUp">
            <summary>
            Occours when a key is released
            </summary>
        </member>
        <member name="E:System.Windows.Forms.RibbonHelpers.GlobalHook.KeyPress">
            <summary>
            Occours when a key is pressed
            </summary>
        </member>
        <member name="T:System.Windows.Forms.RibbonHelpers.GlobalHook.HookProcCallBack">
            <summary>
            Delegate used to recieve HookProc
            </summary>
            <param name="nCode"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.GlobalHook.#ctor(System.Windows.Forms.RibbonHelpers.GlobalHook.HookTypes)">
            <summary>
            Creates a new Hook of the specified type
            </summary>
            <param name="hookType"></param>
        </member>
        <member name="P:System.Windows.Forms.RibbonHelpers.GlobalHook.HookType">
            <summary>
            Gets the type of this hook
            </summary>
        </member>
        <member name="P:System.Windows.Forms.RibbonHelpers.GlobalHook.Handle">
            <summary>
            Gets the handle of the hook
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.GlobalHook.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.RibbonHelpers.GlobalHook.MouseClick"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.GlobalHook.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.RibbonHelpers.GlobalHook.MouseDoubleClick"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.GlobalHook.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.RibbonHelpers.GlobalHook.MouseWheel"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.GlobalHook.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.RibbonHelpers.GlobalHook.MouseDown"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.GlobalHook.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.RibbonHelpers.GlobalHook.MouseUp"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.GlobalHook.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.RibbonHelpers.GlobalHook.MouseMove"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.GlobalHook.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.RibbonHelpers.GlobalHook.KeyDown"/> event
            </summary>
            <param name="e">Event Data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.GlobalHook.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.RibbonHelpers.GlobalHook.KeyUp"/> event
            </summary>
            <param name="e">Event Data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.GlobalHook.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.RibbonHelpers.GlobalHook.KeyPress"/> event
            </summary>
            <param name="e">Event Data</param>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.GlobalHook.HookProc(System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Recieves the actual unsafe mouse hook procedure
            </summary>
            <param name="nCode"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.GlobalHook.KeyboardProc(System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Recieves the actual unsafe keyboard hook procedure
            </summary>
            <param name="code"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.GlobalHook.MouseProc(System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Processes Mouse Procedures
            </summary>
            <param name="code"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.GlobalHook.InstallHook">
            <summary>
            Installs the actual unsafe hook
            </summary>
        </member>
        <member name="M:System.Windows.Forms.RibbonHelpers.GlobalHook.Unhook">
            <summary>
            Unhooks the hook
            </summary>
        </member>
    </members>
</doc>
